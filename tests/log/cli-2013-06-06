[2013-06-06 21:00:01] BuildCept.php.INFO: run shell commmand "php codecept build" [] []
[2013-06-06 21:00:02] BuildCept.php.INFO: see in shell output "generated successfully" [] []
[2013-06-06 21:00:02] BuildCept.php.INFO: see file found "CodeGuy.php" within "tests/unit" [] []
[2013-06-06 21:00:02] BuildCept.php.INFO: see file found "CliGuy.php" within "tests/cli" [] []
[2013-06-06 21:00:02] BuildCept.php.INFO: see in this file "seeFileFound(" [] []
[2013-06-06 21:00:02] BuildCept.php.INFO: PASSED [] []
[2013-06-06 21:00:02] GenerateCeptCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:02] GenerateCeptCept.php.INFO: execute command "generate:cept dummy DummyCept" [] []
[2013-06-06 21:00:03] GenerateCeptCept.php.INFO: see file found "DummyCept.php" within "tests/dummy" [] []
[2013-06-06 21:00:03] GenerateCeptCept.php.INFO: see in this file "$I = new DumbGuy($scenario);" [] []
[2013-06-06 21:00:03] GenerateCeptCept.php.INFO: delete this file  [] []
[2013-06-06 21:00:03] GenerateCeptCept.php.INFO: i am going to create scenario in folder  [] []
[2013-06-06 21:00:03] GenerateCeptCept.php.INFO: execute command "generate:cept dummy path/DummyCept" [] []
[2013-06-06 21:00:04] GenerateCeptCept.php.INFO: see file found "DummyCept.php" within "tests/dummy/path" [] []
[2013-06-06 21:00:04] GenerateCeptCept.php.INFO: delete this file  [] []
[2013-06-06 21:00:04] GenerateCeptCept.php.INFO: i am going to create file with cept.php suffix  [] []
[2013-06-06 21:00:04] GenerateCeptCept.php.INFO: execute command "generate:cept dummy DummyCept.php" [] []
[2013-06-06 21:00:05] GenerateCeptCept.php.INFO: see file found "DummyCept.php" [] []
[2013-06-06 21:00:05] GenerateCeptCept.php.INFO: delete this file  [] []
[2013-06-06 21:00:05] GenerateCeptCept.php.INFO: i am going to create file without any suffix  [] []
[2013-06-06 21:00:05] GenerateCeptCept.php.INFO: execute command "generate:cept dummy Dummy" [] []
[2013-06-06 21:00:16] GenerateCeptCept.php.INFO: see file found "DummyCept.php" [] []
[2013-06-06 21:00:16] GenerateCeptCept.php.INFO: PASSED [] []
[2013-06-06 21:00:16] GenerateCestCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:16] GenerateCestCept.php.INFO: execute command "generate:cest dummy DummyClass" [] []
[2013-06-06 21:00:17] GenerateCestCept.php.INFO: see file found "DummyClassCest.php" [] []
[2013-06-06 21:00:17] GenerateCestCept.php.INFO: see in this file "class DummyClassCest" [] []
[2013-06-06 21:00:17] GenerateCestCept.php.INFO: PASSED [] []
[2013-06-06 21:00:17] GeneratePhpUnitCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:17] GeneratePhpUnitCept.php.INFO: execute command "generate:phpunit dummy Dummy" [] []
[2013-06-06 21:00:20] GeneratePhpUnitCept.php.INFO: see file found "DummyTest.php" [] []
[2013-06-06 21:00:20] GeneratePhpUnitCept.php.INFO: see in this file "class DummyTest extends \PHPUnit_Framework_TestCase" [] []
[2013-06-06 21:00:20] GeneratePhpUnitCept.php.INFO: see in this file "function setUp()" [] []
[2013-06-06 21:00:20] GeneratePhpUnitCept.php.INFO: PASSED [] []
[2013-06-06 21:00:20] GenerateScenariosCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:20] GenerateScenariosCept.php.INFO: execute command "generate:scenarios dummy" [] []
[2013-06-06 21:00:26] GenerateScenariosCept.php.INFO: see file found "File_Exists.txt" within "tests/_data/scenarios" [] []
[2013-06-06 21:00:26] GenerateScenariosCept.php.INFO: see in this file "I WANT TO CHECK CONFIG EXISTS" [] []
[2013-06-06 21:00:26] GenerateScenariosCept.php.INFO: see in this file "I see file found "codeception.yml"" [] []
[2013-06-06 21:00:26] GenerateScenariosCept.php.INFO: PASSED [] []
[2013-06-06 21:00:26] GenerateSuiteCept.php.INFO: as a developer who likes testing  [] []
[2013-06-06 21:00:26] GenerateSuiteCept.php.INFO: so that i have a better tests categorization  [] []
[2013-06-06 21:00:26] GenerateSuiteCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:26] GenerateSuiteCept.php.INFO: execute command "generate:suite house HouseGuy" [] []
[2013-06-06 21:00:28] GenerateSuiteCept.php.INFO: see file found "house.suite.yml" within "tests" [] []
[2013-06-06 21:00:28] GenerateSuiteCept.php.INFO: i expect guy class is generated  [] []
[2013-06-06 21:00:28] GenerateSuiteCept.php.INFO: see in this file "class_name: HouseGuy" [] []
[2013-06-06 21:00:28] GenerateSuiteCept.php.INFO: see file found "HouseHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:00:28] GenerateSuiteCept.php.INFO: see file found "_bootstrap.php" within "tests/house" [] []
[2013-06-06 21:00:28] GenerateSuiteCept.php.INFO: PASSED [] []
[2013-06-06 21:00:28] GenerateTestCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:28] GenerateTestCept.php.INFO: execute command "generate:test dummy Dummy" [] []
[2013-06-06 21:00:37] GenerateTestCept.php.INFO: see file found "DummyTest.php" [] []
[2013-06-06 21:00:37] GenerateTestCept.php.INFO: see in this file "class DummyTest extends \Codeception\TestCase\Test" [] []
[2013-06-06 21:00:37] GenerateTestCept.php.INFO: see in this file "protected $dumbGuy" [] []
[2013-06-06 21:00:37] GenerateTestCept.php.INFO: see in this file "function _before(" [] []
[2013-06-06 21:00:37] GenerateTestCept.php.INFO: PASSED [] []
[2013-06-06 21:00:37] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:37] NamespacifyCept.php.INFO: execute command "namecpacify Jazz --quiet" [] []
[2013-06-06 21:00:39] NamespacifyCept.php.ALERT: Result code was 1.

 [] []
[2013-06-06 21:00:39] NamespacifyCept.php.INFO: # FAILED # [] []
[2013-06-06 21:00:39] NamespacifyCept.php.INFO: PASSED [] []
[2013-06-06 21:00:39] RunIncompleteCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:39] RunIncompleteCept.php.INFO: execute command "run skipped IncompleteMeCept.php" [] []
[2013-06-06 21:00:39] RunIncompleteCept.php.INFO: see in shell output "(IncompleteMeCept.php)  INCOMPLETE" [] []
[2013-06-06 21:00:39] RunIncompleteCept.php.INFO: see in shell output "OK, but incomplete or skipped tests!" [] []
[2013-06-06 21:00:39] RunIncompleteCept.php.INFO: PASSED [] []
[2013-06-06 21:00:39] RunSkippedCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:39] RunSkippedCept.php.INFO: execute command "run skipped SkipMeCept.php" [] []
[2013-06-06 21:00:39] RunSkippedCept.php.INFO: see in shell output "(SkipMeCept.php)  SKIPPED" [] []
[2013-06-06 21:00:39] RunSkippedCept.php.INFO: see in shell output "OK, but incomplete or skipped tests!" [] []
[2013-06-06 21:00:39] RunSkippedCept.php.INFO: PASSED [] []
[2013-06-06 21:00:39] BootstrapCest.bootstrapProject.INFO: am in path "tests/data/sandbox/tests/_data/" [] []
[2013-06-06 21:00:39] BootstrapCest.bootstrapProject.INFO: execute command "bootstrap" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "codeception.yml" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "functional.suite.yml" within "tests" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "acceptance.suite.yml" within "tests" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "unit.suite.yml" within "tests" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "_bootstrap.php" within "tests/acceptance" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "_bootstrap.php" within "tests/functional" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "_bootstrap.php" within "tests/unit" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "WebGuy.php" within "tests/acceptance" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "TestGuy.php" within "tests/functional" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "CodeGuy.php" within "tests/unit" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "WebHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "TestHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see file found "CodeHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: see in shell output "Building Guy classes for suites" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapProject.INFO: PASSED [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapWithNamespace.INFO: am in path "tests/data/sandbox/tests/_data/" [] []
[2013-06-06 21:00:40] BootstrapCest.bootstrapWithNamespace.INFO: execute command "bootstrap --namespace Generated" [] []
[2013-06-06 21:00:44] BootstrapCest.bootstrapWithNamespace.INFO: see in shell output "Building Guy classes for suites" [] []
[2013-06-06 21:00:44] BootstrapCest.bootstrapWithNamespace.INFO: see file found "codeception.yml" [] []
[2013-06-06 21:00:44] BootstrapCest.bootstrapWithNamespace.INFO: see in this file "namespace: Generated" [] []
[2013-06-06 21:00:44] BootstrapCest.bootstrapWithNamespace.INFO: don't see in this file "namespace Generated\" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "functional.suite.yml" within "tests" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "acceptance.suite.yml" within "tests" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "unit.suite.yml" within "tests" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "_bootstrap.php" within "tests/acceptance" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "_bootstrap.php" within "tests/functional" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "_bootstrap.php" within "tests/unit" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "WebGuy.php" within "tests/acceptance" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "TestGuy.php" within "tests/functional" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "CodeGuy.php" within "tests/unit" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "WebHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "TestHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "CodeHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "WebHelper.php" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see in this file "namespace Generated\Codeception\Module;" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see file found "WebGuy.php" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: see in this file "namespace Generated;" [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.ALERT: text namespace Generated; in currently opened file
Failed asserting that '<?php
// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile

namespace Codeception\Generated;
use \Codeception\Maybe;
use Codeception\Module\PhpBrowser;
use Generated\Codeception\Module\WebHelper;

/**
 * Inherited methods
 * @method void wantToTest($text)
 * @method void wantTo($text)
 * @method void expectTo($prediction)
 * @method void expect($prediction)
 * @method void amGoingTo($argumentation)
 * @method void am($role)
 * @method void lookForwardTo($role)
*/

class WebGuy extends \Codeception\AbstractGuy
{
    
    /**
     * Submits a form located on page.
     * Specify the form by it's css or xpath selector.
     * Fill the form fields values as array.
     *
     * Skipped fields will be filled by their values from page.
     * You don't need to click the 'Submit' button afterwards.
     * This command itself triggers the request to form's action.
     *
     * Examples:
     *
     * ``` php
     * <?php
     * $I->submitForm('#login', array('login' => 'davert', 'password' => '123456'));
     *
     * ```
     *
     * For sample Sign Up form:
     *
     * ``` html
     * <form action="/sign_up">
     *     Login: <input type="text" name="user[login]" /><br/>
     *     Password: <input type="password" name="user[password]" /><br/>
     *     Do you agree to out terms? <input type="checkbox" name="user[agree]" /><br/>
     *     Select pricing plan <select name="plan"><option value="1">Free</option><option value="2" selected="selected">Paid</option></select>
     *     <input type="submit" value="Submit" />
     * </form>
     * ```
     * I can write this:
     *
     * ``` php
     * <?php
     * $I->submitForm('#userForm', array('user' => array('login' => 'Davert', 'password' => '123456', 'agree' => true)));
     *
     * ```
     * Note, that pricing plan will be set to Paid, as it's selected on page.
     *
     * @param $selector
     * @param $params
     * @see PhpBrowser::submitForm()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function submitForm($selector, $params) {
        $this->scenario->action('submitForm', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * If your page triggers an ajax request, you can perform it manually.
     * This action sends a POST ajax request with specified params.
     * Additional params can be passed as array.
     *
     * Example:
     *
     * Imagine that by clicking checkbox you trigger ajax request which updates user settings.
     * We emulate that click by running this ajax request manually.
     *
     * ``` php
     * <?php
     * $I->sendAjaxPostRequest('/updateSettings', array('notifications' => true); // POST
     * $I->sendAjaxGetRequest('/updateSettings', array('notifications' => true); // GET
     *
     * ```
     *
     * @param $uri
     * @param $params
     * @see PhpBrowser::sendAjaxPostRequest()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function sendAjaxPostRequest($uri, $params = null) {
        $this->scenario->action('sendAjaxPostRequest', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * If your page triggers an ajax request, you can perform it manually.
     * This action sends a GET ajax request with specified params.
     *
     * See ->sendAjaxPostRequest for examples.
     *
     * @param $uri
     * @param $params
     * @see PhpBrowser::sendAjaxGetRequest()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function sendAjaxGetRequest($uri, $params = null) {
        $this->scenario->action('sendAjaxGetRequest', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Asserts that current page has 404 response status code.
     * @see PhpBrowser::seePageNotFound()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seePageNotFound() {
        $this->scenario->assertion('seePageNotFound', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that response code is equal to value provided.
     *
     * @param $code
     * @return mixed
     * @see PhpBrowser::seeResponseCodeIs()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeResponseCodeIs($code) {
        $this->scenario->assertion('seeResponseCodeIs', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Adds HTTP authentication via username/password.
     *
     * @param $username
     * @param $password
     * @see PhpBrowser::amHttpAuthenticated()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function amHttpAuthenticated($username, $password) {
        $this->scenario->condition('amHttpAuthenticated', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Low-level API method.
     * If Codeception commands are not enough, use [Guzzle HTTP Client](http://guzzlephp.org/) methods directly
     *
     * Example:
     *
     * ``` php
     * <?php
     * // from the official Guzzle manual
     * $I->amGoingTo('Sign all requests with OAuth');
     * $I->executeInGuzzle(function (\Guzzle\Http\Client $client) {
     *      $client->addSubscriber(new Guzzle\Plugin\Oauth\OauthPlugin(array(
     *                  'consumer_key'    => '***',
     *                  'consumer_secret' => '***',
     *                  'token'           => '***',
     *                  'token_secret'    => '***'
     *      )));
     * });
     * ?>
     * ```
     *
     * Not recommended this command too be used on regular basis.
     * If Codeception lacks important Guzzle Client methods implement then and submit patches.
     *
     * @param callable $function
     * @see PhpBrowser::executeInGuzzle()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function executeInGuzzle($function) {
        $this->scenario->action('executeInGuzzle', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Opens the page.
     *
     * @param $page
     * @see Mink::amOnPage()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function amOnPage($page) {
        $this->scenario->condition('amOnPage', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Sets 'url' configuration parameter to hosts subdomain.
     * It does not open a page on subdomain. Use `amOnPage` for that
     *
     * ``` php
     * <?php
     * // If config is: 'http://mysite.com'
     * // or config is: 'http://www.mysite.com'
     * // or config is: 'http://company.mysite.com'
     *
     * $I->amOnSubdomain('user');
     * $I->amOnPage('/');
     * // moves to http://user.mysite.com/
     * ?>
     * ```
     * @param $subdomain
     * @return mixed
     * @see Mink::amOnSubdomain()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function amOnSubdomain($subdomain) {
        $this->scenario->condition('amOnSubdomain', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Check if current page doesn't contain the text specified.
     * Specify the css selector to match only specific region.
     *
     * Examples:
     *
     * ```php
     * <?php
     * $I->dontSee('Login'); // I can suppose user is already logged in
     * $I->dontSee('Sign Up','h1'); // I can suppose it's not a signup page
     * $I->dontSee('Sign Up','//body/h1'); // with XPath
     * ```
     *
     * @param $text
     * @param null $selector
     * @see Mink::dontSee()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSee($text, $selector = null) {
        $this->scenario->action('dontSee', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Check if current page contains the text specified.
     * Specify the css selector to match only specific region.
     *
     * Examples:
     *
     * ``` php
     * <?php
     * $I->see('Logout'); // I can suppose user is logged in
     * $I->see('Sign Up','h1'); // I can suppose it's a signup page
     * $I->see('Sign Up','//body/h1'); // with XPath
     *
     * ```
     *
     * @param $text
     * @param null $selector
     * @see Mink::see()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function see($text, $selector = null) {
        $this->scenario->assertion('see', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if there is a link with text specified.
     * Specify url to match link with exact this url.
     *
     * Examples:
     *
     * ``` php
     * <?php
     * $I->seeLink('Logout'); // matches <a href="#">Logout</a>
     * $I->seeLink('Logout','/logout'); // matches <a href="/logout">Logout</a>
     *
     * ```
     *
     * @param $text
     * @param null $url
     * @see Mink::seeLink()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeLink($text, $url = null) {
        $this->scenario->assertion('seeLink', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if page doesn't contain the link with text specified.
     * Specify url to narrow the results.
     *
     * Examples:
     *
     * ``` php
     * <?php
     * $I->dontSeeLink('Logout'); // I suppose user is not logged in
     *
     * ```
     *
     * @param $text
     * @param null $url
     * @see Mink::dontSeeLink()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeLink($text, $url = null) {
        $this->scenario->action('dontSeeLink', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Perform a click on link or button.
     * Link or button are found by their names or CSS selector.
     * Submits a form if button is a submit type.
     *
     * If link is an image it's found by alt attribute value of image.
     * If button is image button is found by it's value
     * If link or button can't be found by name they are searched by CSS selector.
     *
     * The second parameter is a context: CSS or XPath locator to narrow the search.
     *
     * Examples:
     *
     * ``` php
     * <?php
     * // simple link
     * $I->click('Logout');
     * // button of form
     * $I->click('Submit');
     * // CSS button
     * $I->click('#form input[type=submit]');
     * // XPath
     * $I->click('//form/*[@type=submit]')
     * // link in context
     * $I->click('Logout', '#nav');
     * ?>
     * ```
     * @param $link
     * @param $context
     * @see Mink::click()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function click($link, $context = null) {
        $this->scenario->action('click', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if element exists on a page, matching it by CSS or XPath
     *
     * ``` php
     * <?php
     * $I->seeElement('.error');
     * $I->seeElement(//form/input[1]);
     * ?>
     * ```
     * @param $selector
     * @see Mink::seeElement()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeElement($selector) {
        $this->scenario->assertion('seeElement', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if element does not exist (or is visible) on a page, matching it by CSS or XPath
     *
     * ``` php
     * <?php
     * $I->dontSeeElement('.error');
     * $I->dontSeeElement(//form/input[1]);
     * ?>
     * ```
     * @param $selector
     * @see Mink::dontSeeElement()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeElement($selector) {
        $this->scenario->action('dontSeeElement', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Reloads current page
     * @see Mink::reloadPage()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function reloadPage() {
        $this->scenario->action('reloadPage', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Moves back in history
     * @see Mink::moveBack()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function moveBack() {
        $this->scenario->action('moveBack', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Moves forward in history
     * @see Mink::moveForward()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function moveForward() {
        $this->scenario->action('moveForward', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Fills a text field or textarea with value.
     *
     * @param $field
     * @param $value
     * @see Mink::fillField()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function fillField($field, $value) {
        $this->scenario->action('fillField', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Selects an option in select tag or in radio button group.
     *
     * Example:
     *
     * ``` php
     * <?php
     * $I->selectOption('form select[name=account]', 'Premium');
     * $I->selectOption('form input[name=payment]', 'Monthly');
     * $I->selectOption('//form/select[@name=account]', 'Monthly');
     * ?>
     * ```
     *
     * @param $select
     * @param $option
     * @see Mink::selectOption()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function selectOption($select, $option) {
        $this->scenario->action('selectOption', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Ticks a checkbox.
     * For radio buttons use `selectOption` method.
     *
     * Example:
     *
     * ``` php
     * <?php
     * $I->checkOption('#agree');
     * ?>
     * ```
     *
     * @param $option
     * @see Mink::checkOption()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function checkOption($option) {
        $this->scenario->action('checkOption', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Unticks a checkbox.
     *
     * Example:
     *
     * ``` php
     * <?php
     * $I->uncheckOption('#notify');
     * ?>
     * ```
     *
     * @param $option
     * @see Mink::uncheckOption()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function uncheckOption($option) {
        $this->scenario->action('uncheckOption', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that current uri contains a value
     *
     * ``` php
     * <?php
     * // to match: /home/dashboard
     * $I->seeInCurrentUrl('home');
     * // to match: /users/1
     * $I->seeInCurrentUrl('/users/');
     * ?>
     * ```
     *
     * @param $uri
     * @see Mink::seeInCurrentUrl()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeInCurrentUrl($uri) {
        $this->scenario->assertion('seeInCurrentUrl', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that current uri does not contain a value
     *
     * ``` php
     * <?php
     * $I->dontSeeInCurrentUrl('/users/');
     * ?>
     * ```
     *
     * @param $uri
     * @see Mink::dontSeeInCurrentUrl()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeInCurrentUrl($uri) {
        $this->scenario->action('dontSeeInCurrentUrl', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that current url is equal to value.
     * Unlike `seeInCurrentUrl` performs a strict check.
     *
     * <?php
     * // to match root url
     * $I->seeCurrentUrlEquals('/');
     * ?>
     *
     * @param $uri
     * @see Mink::seeCurrentUrlEquals()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeCurrentUrlEquals($uri) {
        $this->scenario->assertion('seeCurrentUrlEquals', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that current url is not equal to value.
     * Unlike `dontSeeInCurrentUrl` performs a strict check.
     *
     * <?php
     * // current url is not root
     * $I->dontSeeCurrentUrlEquals('/');
     * ?>
     *
     * @param $uri
     * @see Mink::dontSeeCurrentUrlEquals()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeCurrentUrlEquals($uri) {
        $this->scenario->action('dontSeeCurrentUrlEquals', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that current url is matches a RegEx value
     *
     * <?php
     * // to match root url
     * $I->seeCurrentUrlMatches('~$/users/(\d+)~');
     * ?>
     *
     * @param $uri
     * @see Mink::seeCurrentUrlMatches()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeCurrentUrlMatches($uri) {
        $this->scenario->assertion('seeCurrentUrlMatches', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that current url does not match a RegEx value
     *
     * <?php
     * // to match root url
     * $I->dontSeeCurrentUrlMatches('~$/users/(\d+)~');
     * ?>
     *
     * @param $uri
     * @see Mink::dontSeeCurrentUrlMatches()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeCurrentUrlMatches($uri) {
        $this->scenario->action('dontSeeCurrentUrlMatches', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see Mink::seeCookie()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeCookie($cookie) {
        $this->scenario->assertion('seeCookie', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see Mink::dontSeeCookie()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeCookie($cookie) {
        $this->scenario->action('dontSeeCookie', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see Mink::setCookie()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function setCookie($cookie, $value) {
        $this->scenario->action('setCookie', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see Mink::resetCookie()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function resetCookie($cookie) {
        $this->scenario->action('resetCookie', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see Mink::grabCookie()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function grabCookie($cookie) {
        $this->scenario->action('grabCookie', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Takes a parameters from current URI by RegEx.
     * If no url provided returns full URI.
     *
     * ``` php
     * <?php
     * $user_id = $I->grabFromCurrentUrl('~$/user/(\d+)/~');
     * $uri = $I->grabFromCurrentUrl();
     * ?>
     * ```
     *
     * @param null $uri
     * @internal param $url
     * @return mixed
     * @see Mink::grabFromCurrentUrl()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function grabFromCurrentUrl($uri = null) {
        $this->scenario->action('grabFromCurrentUrl', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Attaches file from Codeception data directory to upload field.
     *
     * Example:
     *
     * ``` php
     * <?php
     * // file is stored in 'tests/data/tests.xls'
     * $I->attachFile('prices.xls');
     * ?>
     * ```
     *
     * @param $field
     * @param $filename
     * @see Mink::attachFile()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function attachFile($field, $filename) {
        $this->scenario->action('attachFile', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if option is selected in select field.
     *
     * ``` php
     * <?php
     * $I->seeOptionIsSelected('#form input[name=payment]', 'Visa');
     * ?>
     * ```
     *
     * @param $selector
     * @param $optionText
     * @return mixed
     * @see Mink::seeOptionIsSelected()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeOptionIsSelected($select, $text) {
        $this->scenario->assertion('seeOptionIsSelected', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if option is not selected in select field.
     *
     * ``` php
     * <?php
     * $I->dontSeeOptionIsSelected('#form input[name=payment]', 'Visa');
     * ?>
     * ```
     *
     * @param $selector
     * @param $optionText
     * @return mixed
     * @see Mink::dontSeeOptionIsSelected()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeOptionIsSelected($select, $text) {
        $this->scenario->action('dontSeeOptionIsSelected', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Assert if the specified checkbox is checked.
     * Use css selector or xpath to match.
     *
     * Example:
     *
     * ``` php
     * <?php
     * $I->seeCheckboxIsChecked('#agree'); // I suppose user agreed to terms
     * $I->seeCheckboxIsChecked('#signup_form input[type=checkbox]'); // I suppose user agreed to terms, If there is only one checkbox in form.
     * $I->seeCheckboxIsChecked('//form/input[@type=checkbox and @name=agree]');
     *
     * ```
     *
     * @param $checkbox
     * @see Mink::seeCheckboxIsChecked()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeCheckboxIsChecked($checkbox) {
        $this->scenario->assertion('seeCheckboxIsChecked', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Assert if the specified checkbox is unchecked.
     * Use css selector or xpath to match.
     *
     * Example:
     *
     * ``` php
     * <?php
     * $I->dontSeeCheckboxIsChecked('#agree'); // I suppose user didn't agree to terms
     * $I->seeCheckboxIsChecked('#signup_form input[type=checkbox]'); // I suppose user didn't check the first checkbox in form.
     *
     * ```
     *
     * @param $checkbox
     * @see Mink::dontSeeCheckboxIsChecked()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeCheckboxIsChecked($checkbox) {
        $this->scenario->action('dontSeeCheckboxIsChecked', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that an input field or textarea contains value.
     * Field is matched either by label or CSS or Xpath
     *
     * Example:
     *
     * ``` php
     * <?php
     * $I->seeInField('Body','Type your comment here');
     * $I->seeInField('form textarea[name=body]','Type your comment here');
     * $I->seeInField('form input[type=hidden]','hidden_value');
     * $I->seeInField('#searchform input','Search');
     * $I->seeInField('//form/*[@name=search]','Search');
     * ?>
     * ```
     *
     * @param $field
     * @param $value
     * @see Mink::seeInField()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeInField($field, $value) {
        $this->scenario->assertion('seeInField', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that an input field or textarea doesn't contain value.
     * Field is matched either by label or CSS or Xpath
     * Example:
     *
     * ``` php
     * <?php
     * $I->dontSeeInField('Body','Type your comment here');
     * $I->dontSeeInField('form textarea[name=body]','Type your comment here');
     * $I->dontSeeInField('form input[type=hidden]','hidden_value');
     * $I->dontSeeInField('#searchform input','Search');
     * $I->dontSeeInField('//form/*[@name=search]','Search');
     * ?>
     * ```
     *
     * @param $field
     * @param $value
     * @see Mink::dontSeeInField()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeInField($field, $value) {
        $this->scenario->action('dontSeeInField', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Finds and returns text contents of element.
     * Element is searched by CSS selector, XPath or matcher by regex.
     *
     * Example:
     *
     * ``` php
     * <?php
     * $heading = $I->grabTextFrom('h1');
     * $heading = $I->grabTextFrom('descendant-or-self::h1');
     * $value = $I->grabTextFrom('~<input value=(.*?)]~sgi');
     * ?>
     * ```
     *
     * @param $cssOrXPathOrRegex
     * @return mixed
     * @see Mink::grabTextFrom()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function grabTextFrom($cssOrXPathOrRegex) {
        $this->scenario->action('grabTextFrom', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Finds and returns field and returns it's value.
     * Searches by field name, then by CSS, then by XPath
     *
     * Example:
     *
     * ``` php
     * <?php
     * $name = $I->grabValueFrom('Name');
     * $name = $I->grabValueFrom('input[name=username]');
     * $name = $I->grabValueFrom('descendant-or-self::form/descendant::input[@name = 'username']');
     * ?>
     * ```
     *
     * @param $field
     * @return mixed
     * @see Mink::grabValueFrom()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function grabValueFrom($field) {
        $this->scenario->action('grabValueFrom', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see Mink::grabAttribute()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function grabAttribute() {
        $this->scenario->action('grabAttribute', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }
}

' contains "namespace Generated;". [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: # FAILED # [] []
[2013-06-06 21:00:45] BootstrapCest.bootstrapWithNamespace.INFO: PASSED [] []
[2013-06-06 21:00:45] OrderCest.checkOneFile.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:45] OrderCest.checkOneFile.INFO: execute command "run order LoadingOrderCept.php" [] []
[2013-06-06 21:00:45] OrderCest.checkOneFile.INFO: i expect initialization, bootstrap(b), before suite, before, bootstrap(b), test(t), after, after suite  [] []
[2013-06-06 21:00:45] OrderCest.checkOneFile.INFO: see file found "order.txt" within "tests/_log" [] []
[2013-06-06 21:00:45] OrderCest.checkOneFile.INFO: see in this file "IBS([BST])" [] []
[2013-06-06 21:00:45] OrderCest.checkOneFile.INFO: PASSED [] []
[2013-06-06 21:00:45] OrderCest.checkForFails.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:45] OrderCest.checkForFails.INFO: execute command "run order FailedCept.php --no-exit" [] []
[2013-06-06 21:00:45] OrderCest.checkForFails.INFO: see file found "order.txt" within "tests/_log" [] []
[2013-06-06 21:00:45] OrderCest.checkForFails.INFO: i expect initialization, bootstrap, before suite, before, bootstrap, test, fail, after, after suite  [] []
[2013-06-06 21:00:45] OrderCest.checkForFails.INFO: see in this file "IBS([BSTF])" [] []
[2013-06-06 21:00:45] OrderCest.checkForFails.INFO: PASSED [] []
[2013-06-06 21:00:45] OrderCest.checkTwoFiles.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:45] OrderCest.checkTwoFiles.INFO: execute command "run order --no-exit" [] []
[2013-06-06 21:00:45] OrderCest.checkTwoFiles.INFO: see file found "order.txt" within "tests/_log" [] []
[2013-06-06 21:00:45] OrderCest.checkTwoFiles.INFO: see in this file "IBSBSBS([BST][BSTF][BST])" [] []
[2013-06-06 21:00:45] OrderCest.checkTwoFiles.INFO: PASSED [] []
[2013-06-06 21:00:45] RunCest.runOneFile.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:45] RunCest.runOneFile.INFO: execute command "run tests/dummy/FileExistsCept.php" [] []
[2013-06-06 21:00:45] RunCest.runOneFile.INFO: see file found "report.html" within "tests/_log" [] []
[2013-06-06 21:00:45] RunCest.runOneFile.INFO: see in shell output "OK (" [] []
[2013-06-06 21:00:45] RunCest.runOneFile.INFO: PASSED [] []
[2013-06-06 21:00:45] RunCest.runHtml.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:45] RunCest.runHtml.INFO: execute command "run dummy --html" [] []
[2013-06-06 21:00:45] RunCest.runHtml.INFO: see file found "report.html" within "tests/_log" [] []
[2013-06-06 21:00:45] RunCest.runHtml.INFO: PASSED [] []
[2013-06-06 21:00:45] RunCest.runJsonReport.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:45] RunCest.runJsonReport.INFO: execute command "run dummy --json" [] []
[2013-06-06 21:00:46] RunCest.runJsonReport.INFO: see file found "report.json" within "tests/_log" [] []
[2013-06-06 21:00:46] RunCest.runJsonReport.INFO: see in this file ""suite":" [] []
[2013-06-06 21:00:46] RunCest.runJsonReport.INFO: see in this file ""dummy"" [] []
[2013-06-06 21:00:46] RunCest.runJsonReport.INFO: PASSED [] []
[2013-06-06 21:00:46] RunCest.runTapReport.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:46] RunCest.runTapReport.INFO: execute command "run dummy --tap" [] []
[2013-06-06 21:00:46] RunCest.runTapReport.INFO: see file found "report.tap.log" within "tests/_log" [] []
[2013-06-06 21:00:46] RunCest.runTapReport.INFO: PASSED [] []
[2013-06-06 21:00:46] RunCest.runXmlReport.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:46] RunCest.runXmlReport.INFO: execute command "run dummy --xml" [] []
[2013-06-06 21:00:46] RunCest.runXmlReport.INFO: see file found "report.xml" within "tests/_log" [] []
[2013-06-06 21:00:46] RunCest.runXmlReport.INFO: see in this file "<?xml" [] []
[2013-06-06 21:00:46] RunCest.runXmlReport.INFO: see in this file "<testsuite name="dummy"" [] []
[2013-06-06 21:00:46] RunCest.runXmlReport.INFO: see in this file "<testcase file="FileExistsCept.php"" [] []
[2013-06-06 21:00:46] RunCest.runXmlReport.INFO: PASSED [] []
[2013-06-06 21:00:46] RunCest.runReportMode.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:46] RunCest.runReportMode.INFO: execute command "run dummy --report" [] []
[2013-06-06 21:00:46] RunCest.runReportMode.INFO: see in shell output "FileExistsCept.php" [] []
[2013-06-06 21:00:46] RunCest.runReportMode.INFO: see in shell output "........Ok" [] []
[2013-06-06 21:00:46] RunCest.runReportMode.INFO: PASSED [] []
[2013-06-06 21:00:46] RunCest.runOneGroup.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:46] RunCest.runOneGroup.INFO: execute command "run skipped -g notorun" [] []
[2013-06-06 21:00:46] RunCest.runOneGroup.INFO: see in shell output "Incomplete" [] []
[2013-06-06 21:00:46] RunCest.runOneGroup.INFO: don't see in shell output "Skipped" [] []
[2013-06-06 21:00:46] RunCest.runOneGroup.INFO: PASSED [] []
[2013-06-06 21:00:46] RunCest.runTwoSuites.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:46] RunCest.runTwoSuites.INFO: execute command "run skipped,dummy --no-exit" [] []
[2013-06-06 21:00:46] RunCest.runTwoSuites.INFO: see in shell output "Suite skipped started" [] []
[2013-06-06 21:00:46] RunCest.runTwoSuites.INFO: see in shell output "Suite dummy started" [] []
[2013-06-06 21:00:46] RunCest.runTwoSuites.INFO: don't see in shell output "Suite remote started" [] []
[2013-06-06 21:00:46] RunCest.runTwoSuites.INFO: PASSED [] []
[2013-06-06 21:00:46] RunCest.skipSuites.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:00:46] RunCest.skipSuites.INFO: execute command "run --skip skipped --skip remote --skip remote_server --skip order" [] []
[2013-06-06 21:00:47] RunCest.skipSuites.INFO: see in shell output "Suite dummy started" [] []
[2013-06-06 21:00:47] RunCest.skipSuites.INFO: don't see in shell output "Suite remote started" [] []
[2013-06-06 21:00:47] RunCest.skipSuites.INFO: don't see in shell output "Suite remote_server started" [] []
[2013-06-06 21:00:47] RunCest.skipSuites.INFO: don't see in shell output "Suite order started" [] []
[2013-06-06 21:00:47] RunCest.skipSuites.INFO: PASSED [] []
[2013-06-06 21:01:41] BuildCept.php.INFO: run shell commmand "php codecept build" [] []
[2013-06-06 21:01:43] BuildCept.php.INFO: see in shell output "generated successfully" [] []
[2013-06-06 21:01:43] BuildCept.php.INFO: see file found "CodeGuy.php" within "tests/unit" [] []
[2013-06-06 21:01:43] BuildCept.php.INFO: see file found "CliGuy.php" within "tests/cli" [] []
[2013-06-06 21:01:43] BuildCept.php.INFO: see in this file "seeFileFound(" [] []
[2013-06-06 21:01:43] BuildCept.php.INFO: PASSED [] []
[2013-06-06 21:01:43] GenerateCeptCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:01:43] GenerateCeptCept.php.INFO: execute command "generate:cept dummy DummyCept" [] []
[2013-06-06 21:01:45] GenerateCeptCept.php.INFO: see file found "DummyCept.php" within "tests/dummy" [] []
[2013-06-06 21:01:45] GenerateCeptCept.php.INFO: see in this file "$I = new DumbGuy($scenario);" [] []
[2013-06-06 21:01:45] GenerateCeptCept.php.INFO: delete this file  [] []
[2013-06-06 21:01:45] GenerateCeptCept.php.INFO: i am going to create scenario in folder  [] []
[2013-06-06 21:01:45] GenerateCeptCept.php.INFO: execute command "generate:cept dummy path/DummyCept" [] []
[2013-06-06 21:01:47] GenerateCeptCept.php.INFO: see file found "DummyCept.php" within "tests/dummy/path" [] []
[2013-06-06 21:01:47] GenerateCeptCept.php.INFO: delete this file  [] []
[2013-06-06 21:01:47] GenerateCeptCept.php.INFO: i am going to create file with cept.php suffix  [] []
[2013-06-06 21:01:47] GenerateCeptCept.php.INFO: execute command "generate:cept dummy DummyCept.php" [] []
[2013-06-06 21:01:51] GenerateCeptCept.php.INFO: see file found "DummyCept.php" [] []
[2013-06-06 21:01:51] GenerateCeptCept.php.INFO: delete this file  [] []
[2013-06-06 21:01:51] GenerateCeptCept.php.INFO: i am going to create file without any suffix  [] []
[2013-06-06 21:01:51] GenerateCeptCept.php.INFO: execute command "generate:cept dummy Dummy" [] []
[2013-06-06 21:01:53] GenerateCeptCept.php.INFO: see file found "DummyCept.php" [] []
[2013-06-06 21:01:53] GenerateCeptCept.php.INFO: PASSED [] []
[2013-06-06 21:01:53] GenerateCestCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:01:53] GenerateCestCept.php.INFO: execute command "generate:cest dummy DummyClass" [] []
[2013-06-06 21:02:18] GenerateCestCept.php.INFO: see file found "DummyClassCest.php" [] []
[2013-06-06 21:02:18] GenerateCestCept.php.INFO: see in this file "class DummyClassCest" [] []
[2013-06-06 21:02:18] GenerateCestCept.php.INFO: PASSED [] []
[2013-06-06 21:02:18] GeneratePhpUnitCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:18] GeneratePhpUnitCept.php.INFO: execute command "generate:phpunit dummy Dummy" [] []
[2013-06-06 21:02:22] GeneratePhpUnitCept.php.INFO: see file found "DummyTest.php" [] []
[2013-06-06 21:02:22] GeneratePhpUnitCept.php.INFO: see in this file "class DummyTest extends \PHPUnit_Framework_TestCase" [] []
[2013-06-06 21:02:22] GeneratePhpUnitCept.php.INFO: see in this file "function setUp()" [] []
[2013-06-06 21:02:22] GeneratePhpUnitCept.php.INFO: PASSED [] []
[2013-06-06 21:02:22] GenerateScenariosCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:22] GenerateScenariosCept.php.INFO: execute command "generate:scenarios dummy" [] []
[2013-06-06 21:02:23] GenerateScenariosCept.php.INFO: see file found "File_Exists.txt" within "tests/_data/scenarios" [] []
[2013-06-06 21:02:23] GenerateScenariosCept.php.INFO: see in this file "I WANT TO CHECK CONFIG EXISTS" [] []
[2013-06-06 21:02:23] GenerateScenariosCept.php.INFO: see in this file "I see file found "codeception.yml"" [] []
[2013-06-06 21:02:23] GenerateScenariosCept.php.INFO: PASSED [] []
[2013-06-06 21:02:23] GenerateSuiteCept.php.INFO: as a developer who likes testing  [] []
[2013-06-06 21:02:23] GenerateSuiteCept.php.INFO: so that i have a better tests categorization  [] []
[2013-06-06 21:02:23] GenerateSuiteCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:23] GenerateSuiteCept.php.INFO: execute command "generate:suite house HouseGuy" [] []
[2013-06-06 21:02:23] GenerateSuiteCept.php.INFO: see file found "house.suite.yml" within "tests" [] []
[2013-06-06 21:02:23] GenerateSuiteCept.php.INFO: i expect guy class is generated  [] []
[2013-06-06 21:02:23] GenerateSuiteCept.php.INFO: see in this file "class_name: HouseGuy" [] []
[2013-06-06 21:02:23] GenerateSuiteCept.php.INFO: see file found "HouseHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:02:23] GenerateSuiteCept.php.INFO: see file found "_bootstrap.php" within "tests/house" [] []
[2013-06-06 21:02:23] GenerateSuiteCept.php.INFO: PASSED [] []
[2013-06-06 21:02:23] GenerateTestCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:23] GenerateTestCept.php.INFO: execute command "generate:test dummy Dummy" [] []
[2013-06-06 21:02:24] GenerateTestCept.php.INFO: see file found "DummyTest.php" [] []
[2013-06-06 21:02:24] GenerateTestCept.php.INFO: see in this file "class DummyTest extends \Codeception\TestCase\Test" [] []
[2013-06-06 21:02:24] GenerateTestCept.php.INFO: see in this file "protected $dumbGuy" [] []
[2013-06-06 21:02:24] GenerateTestCept.php.INFO: see in this file "function _before(" [] []
[2013-06-06 21:02:24] GenerateTestCept.php.INFO: PASSED [] []
[2013-06-06 21:02:24] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:24] NamespacifyCept.php.INFO: execute command "namecpacify Jazz --quiet" [] []
[2013-06-06 21:02:28] NamespacifyCept.php.ALERT: Result code was 1.

 [] []
[2013-06-06 21:02:28] NamespacifyCept.php.INFO: # FAILED # [] []
[2013-06-06 21:02:28] NamespacifyCept.php.INFO: PASSED [] []
[2013-06-06 21:02:28] RunIncompleteCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:28] RunIncompleteCept.php.INFO: execute command "run skipped IncompleteMeCept.php" [] []
[2013-06-06 21:02:28] RunIncompleteCept.php.INFO: see in shell output "(IncompleteMeCept.php)  INCOMPLETE" [] []
[2013-06-06 21:02:28] RunIncompleteCept.php.INFO: see in shell output "OK, but incomplete or skipped tests!" [] []
[2013-06-06 21:02:28] RunIncompleteCept.php.INFO: PASSED [] []
[2013-06-06 21:02:28] RunSkippedCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:28] RunSkippedCept.php.INFO: execute command "run skipped SkipMeCept.php" [] []
[2013-06-06 21:02:28] RunSkippedCept.php.INFO: see in shell output "(SkipMeCept.php)  SKIPPED" [] []
[2013-06-06 21:02:28] RunSkippedCept.php.INFO: see in shell output "OK, but incomplete or skipped tests!" [] []
[2013-06-06 21:02:28] RunSkippedCept.php.INFO: PASSED [] []
[2013-06-06 21:02:28] BootstrapCest.bootstrapProject.INFO: am in path "tests/data/sandbox/tests/_data/" [] []
[2013-06-06 21:02:28] BootstrapCest.bootstrapProject.INFO: execute command "bootstrap" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "codeception.yml" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "functional.suite.yml" within "tests" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "acceptance.suite.yml" within "tests" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "unit.suite.yml" within "tests" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "_bootstrap.php" within "tests/acceptance" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "_bootstrap.php" within "tests/functional" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "_bootstrap.php" within "tests/unit" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "WebGuy.php" within "tests/acceptance" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "TestGuy.php" within "tests/functional" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "CodeGuy.php" within "tests/unit" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "WebHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "TestHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see file found "CodeHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: see in shell output "Building Guy classes for suites" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapProject.INFO: PASSED [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapWithNamespace.INFO: am in path "tests/data/sandbox/tests/_data/" [] []
[2013-06-06 21:02:35] BootstrapCest.bootstrapWithNamespace.INFO: execute command "bootstrap --namespace Generated" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see in shell output "Building Guy classes for suites" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "codeception.yml" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see in this file "namespace: Generated" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: don't see in this file "namespace Generated\" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "functional.suite.yml" within "tests" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "acceptance.suite.yml" within "tests" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "unit.suite.yml" within "tests" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "_bootstrap.php" within "tests/acceptance" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "_bootstrap.php" within "tests/functional" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "_bootstrap.php" within "tests/unit" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "WebGuy.php" within "tests/acceptance" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "TestGuy.php" within "tests/functional" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "CodeGuy.php" within "tests/unit" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "WebHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "TestHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "CodeHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "WebHelper.php" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see in this file "namespace Generated\Codeception\Module;" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see file found "WebGuy.php" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: see in this file "namespace Generated\Codeception;" [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.ALERT: text namespace Generated\Codeception; in currently opened file
Failed asserting that '<?php
// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile

namespace Codeception\Generated;
use \Codeception\Maybe;
use Codeception\Module\PhpBrowser;
use Generated\Codeception\Module\WebHelper;

/**
 * Inherited methods
 * @method void wantToTest($text)
 * @method void wantTo($text)
 * @method void expectTo($prediction)
 * @method void expect($prediction)
 * @method void amGoingTo($argumentation)
 * @method void am($role)
 * @method void lookForwardTo($role)
*/

class WebGuy extends \Codeception\AbstractGuy
{
    
    /**
     * Submits a form located on page.
     * Specify the form by it's css or xpath selector.
     * Fill the form fields values as array.
     *
     * Skipped fields will be filled by their values from page.
     * You don't need to click the 'Submit' button afterwards.
     * This command itself triggers the request to form's action.
     *
     * Examples:
     *
     * ``` php
     * <?php
     * $I->submitForm('#login', array('login' => 'davert', 'password' => '123456'));
     *
     * ```
     *
     * For sample Sign Up form:
     *
     * ``` html
     * <form action="/sign_up">
     *     Login: <input type="text" name="user[login]" /><br/>
     *     Password: <input type="password" name="user[password]" /><br/>
     *     Do you agree to out terms? <input type="checkbox" name="user[agree]" /><br/>
     *     Select pricing plan <select name="plan"><option value="1">Free</option><option value="2" selected="selected">Paid</option></select>
     *     <input type="submit" value="Submit" />
     * </form>
     * ```
     * I can write this:
     *
     * ``` php
     * <?php
     * $I->submitForm('#userForm', array('user' => array('login' => 'Davert', 'password' => '123456', 'agree' => true)));
     *
     * ```
     * Note, that pricing plan will be set to Paid, as it's selected on page.
     *
     * @param $selector
     * @param $params
     * @see PhpBrowser::submitForm()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function submitForm($selector, $params) {
        $this->scenario->action('submitForm', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * If your page triggers an ajax request, you can perform it manually.
     * This action sends a POST ajax request with specified params.
     * Additional params can be passed as array.
     *
     * Example:
     *
     * Imagine that by clicking checkbox you trigger ajax request which updates user settings.
     * We emulate that click by running this ajax request manually.
     *
     * ``` php
     * <?php
     * $I->sendAjaxPostRequest('/updateSettings', array('notifications' => true); // POST
     * $I->sendAjaxGetRequest('/updateSettings', array('notifications' => true); // GET
     *
     * ```
     *
     * @param $uri
     * @param $params
     * @see PhpBrowser::sendAjaxPostRequest()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function sendAjaxPostRequest($uri, $params = null) {
        $this->scenario->action('sendAjaxPostRequest', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * If your page triggers an ajax request, you can perform it manually.
     * This action sends a GET ajax request with specified params.
     *
     * See ->sendAjaxPostRequest for examples.
     *
     * @param $uri
     * @param $params
     * @see PhpBrowser::sendAjaxGetRequest()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function sendAjaxGetRequest($uri, $params = null) {
        $this->scenario->action('sendAjaxGetRequest', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Asserts that current page has 404 response status code.
     * @see PhpBrowser::seePageNotFound()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seePageNotFound() {
        $this->scenario->assertion('seePageNotFound', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that response code is equal to value provided.
     *
     * @param $code
     * @return mixed
     * @see PhpBrowser::seeResponseCodeIs()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeResponseCodeIs($code) {
        $this->scenario->assertion('seeResponseCodeIs', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Adds HTTP authentication via username/password.
     *
     * @param $username
     * @param $password
     * @see PhpBrowser::amHttpAuthenticated()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function amHttpAuthenticated($username, $password) {
        $this->scenario->condition('amHttpAuthenticated', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Low-level API method.
     * If Codeception commands are not enough, use [Guzzle HTTP Client](http://guzzlephp.org/) methods directly
     *
     * Example:
     *
     * ``` php
     * <?php
     * // from the official Guzzle manual
     * $I->amGoingTo('Sign all requests with OAuth');
     * $I->executeInGuzzle(function (\Guzzle\Http\Client $client) {
     *      $client->addSubscriber(new Guzzle\Plugin\Oauth\OauthPlugin(array(
     *                  'consumer_key'    => '***',
     *                  'consumer_secret' => '***',
     *                  'token'           => '***',
     *                  'token_secret'    => '***'
     *      )));
     * });
     * ?>
     * ```
     *
     * Not recommended this command too be used on regular basis.
     * If Codeception lacks important Guzzle Client methods implement then and submit patches.
     *
     * @param callable $function
     * @see PhpBrowser::executeInGuzzle()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function executeInGuzzle($function) {
        $this->scenario->action('executeInGuzzle', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Opens the page.
     *
     * @param $page
     * @see Mink::amOnPage()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function amOnPage($page) {
        $this->scenario->condition('amOnPage', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Sets 'url' configuration parameter to hosts subdomain.
     * It does not open a page on subdomain. Use `amOnPage` for that
     *
     * ``` php
     * <?php
     * // If config is: 'http://mysite.com'
     * // or config is: 'http://www.mysite.com'
     * // or config is: 'http://company.mysite.com'
     *
     * $I->amOnSubdomain('user');
     * $I->amOnPage('/');
     * // moves to http://user.mysite.com/
     * ?>
     * ```
     * @param $subdomain
     * @return mixed
     * @see Mink::amOnSubdomain()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function amOnSubdomain($subdomain) {
        $this->scenario->condition('amOnSubdomain', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Check if current page doesn't contain the text specified.
     * Specify the css selector to match only specific region.
     *
     * Examples:
     *
     * ```php
     * <?php
     * $I->dontSee('Login'); // I can suppose user is already logged in
     * $I->dontSee('Sign Up','h1'); // I can suppose it's not a signup page
     * $I->dontSee('Sign Up','//body/h1'); // with XPath
     * ```
     *
     * @param $text
     * @param null $selector
     * @see Mink::dontSee()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSee($text, $selector = null) {
        $this->scenario->action('dontSee', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Check if current page contains the text specified.
     * Specify the css selector to match only specific region.
     *
     * Examples:
     *
     * ``` php
     * <?php
     * $I->see('Logout'); // I can suppose user is logged in
     * $I->see('Sign Up','h1'); // I can suppose it's a signup page
     * $I->see('Sign Up','//body/h1'); // with XPath
     *
     * ```
     *
     * @param $text
     * @param null $selector
     * @see Mink::see()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function see($text, $selector = null) {
        $this->scenario->assertion('see', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if there is a link with text specified.
     * Specify url to match link with exact this url.
     *
     * Examples:
     *
     * ``` php
     * <?php
     * $I->seeLink('Logout'); // matches <a href="#">Logout</a>
     * $I->seeLink('Logout','/logout'); // matches <a href="/logout">Logout</a>
     *
     * ```
     *
     * @param $text
     * @param null $url
     * @see Mink::seeLink()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeLink($text, $url = null) {
        $this->scenario->assertion('seeLink', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if page doesn't contain the link with text specified.
     * Specify url to narrow the results.
     *
     * Examples:
     *
     * ``` php
     * <?php
     * $I->dontSeeLink('Logout'); // I suppose user is not logged in
     *
     * ```
     *
     * @param $text
     * @param null $url
     * @see Mink::dontSeeLink()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeLink($text, $url = null) {
        $this->scenario->action('dontSeeLink', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Perform a click on link or button.
     * Link or button are found by their names or CSS selector.
     * Submits a form if button is a submit type.
     *
     * If link is an image it's found by alt attribute value of image.
     * If button is image button is found by it's value
     * If link or button can't be found by name they are searched by CSS selector.
     *
     * The second parameter is a context: CSS or XPath locator to narrow the search.
     *
     * Examples:
     *
     * ``` php
     * <?php
     * // simple link
     * $I->click('Logout');
     * // button of form
     * $I->click('Submit');
     * // CSS button
     * $I->click('#form input[type=submit]');
     * // XPath
     * $I->click('//form/*[@type=submit]')
     * // link in context
     * $I->click('Logout', '#nav');
     * ?>
     * ```
     * @param $link
     * @param $context
     * @see Mink::click()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function click($link, $context = null) {
        $this->scenario->action('click', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if element exists on a page, matching it by CSS or XPath
     *
     * ``` php
     * <?php
     * $I->seeElement('.error');
     * $I->seeElement(//form/input[1]);
     * ?>
     * ```
     * @param $selector
     * @see Mink::seeElement()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeElement($selector) {
        $this->scenario->assertion('seeElement', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if element does not exist (or is visible) on a page, matching it by CSS or XPath
     *
     * ``` php
     * <?php
     * $I->dontSeeElement('.error');
     * $I->dontSeeElement(//form/input[1]);
     * ?>
     * ```
     * @param $selector
     * @see Mink::dontSeeElement()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeElement($selector) {
        $this->scenario->action('dontSeeElement', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Reloads current page
     * @see Mink::reloadPage()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function reloadPage() {
        $this->scenario->action('reloadPage', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Moves back in history
     * @see Mink::moveBack()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function moveBack() {
        $this->scenario->action('moveBack', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Moves forward in history
     * @see Mink::moveForward()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function moveForward() {
        $this->scenario->action('moveForward', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Fills a text field or textarea with value.
     *
     * @param $field
     * @param $value
     * @see Mink::fillField()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function fillField($field, $value) {
        $this->scenario->action('fillField', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Selects an option in select tag or in radio button group.
     *
     * Example:
     *
     * ``` php
     * <?php
     * $I->selectOption('form select[name=account]', 'Premium');
     * $I->selectOption('form input[name=payment]', 'Monthly');
     * $I->selectOption('//form/select[@name=account]', 'Monthly');
     * ?>
     * ```
     *
     * @param $select
     * @param $option
     * @see Mink::selectOption()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function selectOption($select, $option) {
        $this->scenario->action('selectOption', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Ticks a checkbox.
     * For radio buttons use `selectOption` method.
     *
     * Example:
     *
     * ``` php
     * <?php
     * $I->checkOption('#agree');
     * ?>
     * ```
     *
     * @param $option
     * @see Mink::checkOption()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function checkOption($option) {
        $this->scenario->action('checkOption', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Unticks a checkbox.
     *
     * Example:
     *
     * ``` php
     * <?php
     * $I->uncheckOption('#notify');
     * ?>
     * ```
     *
     * @param $option
     * @see Mink::uncheckOption()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function uncheckOption($option) {
        $this->scenario->action('uncheckOption', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that current uri contains a value
     *
     * ``` php
     * <?php
     * // to match: /home/dashboard
     * $I->seeInCurrentUrl('home');
     * // to match: /users/1
     * $I->seeInCurrentUrl('/users/');
     * ?>
     * ```
     *
     * @param $uri
     * @see Mink::seeInCurrentUrl()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeInCurrentUrl($uri) {
        $this->scenario->assertion('seeInCurrentUrl', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that current uri does not contain a value
     *
     * ``` php
     * <?php
     * $I->dontSeeInCurrentUrl('/users/');
     * ?>
     * ```
     *
     * @param $uri
     * @see Mink::dontSeeInCurrentUrl()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeInCurrentUrl($uri) {
        $this->scenario->action('dontSeeInCurrentUrl', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that current url is equal to value.
     * Unlike `seeInCurrentUrl` performs a strict check.
     *
     * <?php
     * // to match root url
     * $I->seeCurrentUrlEquals('/');
     * ?>
     *
     * @param $uri
     * @see Mink::seeCurrentUrlEquals()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeCurrentUrlEquals($uri) {
        $this->scenario->assertion('seeCurrentUrlEquals', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that current url is not equal to value.
     * Unlike `dontSeeInCurrentUrl` performs a strict check.
     *
     * <?php
     * // current url is not root
     * $I->dontSeeCurrentUrlEquals('/');
     * ?>
     *
     * @param $uri
     * @see Mink::dontSeeCurrentUrlEquals()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeCurrentUrlEquals($uri) {
        $this->scenario->action('dontSeeCurrentUrlEquals', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that current url is matches a RegEx value
     *
     * <?php
     * // to match root url
     * $I->seeCurrentUrlMatches('~$/users/(\d+)~');
     * ?>
     *
     * @param $uri
     * @see Mink::seeCurrentUrlMatches()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeCurrentUrlMatches($uri) {
        $this->scenario->assertion('seeCurrentUrlMatches', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that current url does not match a RegEx value
     *
     * <?php
     * // to match root url
     * $I->dontSeeCurrentUrlMatches('~$/users/(\d+)~');
     * ?>
     *
     * @param $uri
     * @see Mink::dontSeeCurrentUrlMatches()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeCurrentUrlMatches($uri) {
        $this->scenario->action('dontSeeCurrentUrlMatches', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see Mink::seeCookie()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeCookie($cookie) {
        $this->scenario->assertion('seeCookie', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see Mink::dontSeeCookie()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeCookie($cookie) {
        $this->scenario->action('dontSeeCookie', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see Mink::setCookie()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function setCookie($cookie, $value) {
        $this->scenario->action('setCookie', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see Mink::resetCookie()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function resetCookie($cookie) {
        $this->scenario->action('resetCookie', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see Mink::grabCookie()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function grabCookie($cookie) {
        $this->scenario->action('grabCookie', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Takes a parameters from current URI by RegEx.
     * If no url provided returns full URI.
     *
     * ``` php
     * <?php
     * $user_id = $I->grabFromCurrentUrl('~$/user/(\d+)/~');
     * $uri = $I->grabFromCurrentUrl();
     * ?>
     * ```
     *
     * @param null $uri
     * @internal param $url
     * @return mixed
     * @see Mink::grabFromCurrentUrl()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function grabFromCurrentUrl($uri = null) {
        $this->scenario->action('grabFromCurrentUrl', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Attaches file from Codeception data directory to upload field.
     *
     * Example:
     *
     * ``` php
     * <?php
     * // file is stored in 'tests/data/tests.xls'
     * $I->attachFile('prices.xls');
     * ?>
     * ```
     *
     * @param $field
     * @param $filename
     * @see Mink::attachFile()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function attachFile($field, $filename) {
        $this->scenario->action('attachFile', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if option is selected in select field.
     *
     * ``` php
     * <?php
     * $I->seeOptionIsSelected('#form input[name=payment]', 'Visa');
     * ?>
     * ```
     *
     * @param $selector
     * @param $optionText
     * @return mixed
     * @see Mink::seeOptionIsSelected()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeOptionIsSelected($select, $text) {
        $this->scenario->assertion('seeOptionIsSelected', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if option is not selected in select field.
     *
     * ``` php
     * <?php
     * $I->dontSeeOptionIsSelected('#form input[name=payment]', 'Visa');
     * ?>
     * ```
     *
     * @param $selector
     * @param $optionText
     * @return mixed
     * @see Mink::dontSeeOptionIsSelected()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeOptionIsSelected($select, $text) {
        $this->scenario->action('dontSeeOptionIsSelected', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Assert if the specified checkbox is checked.
     * Use css selector or xpath to match.
     *
     * Example:
     *
     * ``` php
     * <?php
     * $I->seeCheckboxIsChecked('#agree'); // I suppose user agreed to terms
     * $I->seeCheckboxIsChecked('#signup_form input[type=checkbox]'); // I suppose user agreed to terms, If there is only one checkbox in form.
     * $I->seeCheckboxIsChecked('//form/input[@type=checkbox and @name=agree]');
     *
     * ```
     *
     * @param $checkbox
     * @see Mink::seeCheckboxIsChecked()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeCheckboxIsChecked($checkbox) {
        $this->scenario->assertion('seeCheckboxIsChecked', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Assert if the specified checkbox is unchecked.
     * Use css selector or xpath to match.
     *
     * Example:
     *
     * ``` php
     * <?php
     * $I->dontSeeCheckboxIsChecked('#agree'); // I suppose user didn't agree to terms
     * $I->seeCheckboxIsChecked('#signup_form input[type=checkbox]'); // I suppose user didn't check the first checkbox in form.
     *
     * ```
     *
     * @param $checkbox
     * @see Mink::dontSeeCheckboxIsChecked()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeCheckboxIsChecked($checkbox) {
        $this->scenario->action('dontSeeCheckboxIsChecked', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that an input field or textarea contains value.
     * Field is matched either by label or CSS or Xpath
     *
     * Example:
     *
     * ``` php
     * <?php
     * $I->seeInField('Body','Type your comment here');
     * $I->seeInField('form textarea[name=body]','Type your comment here');
     * $I->seeInField('form input[type=hidden]','hidden_value');
     * $I->seeInField('#searchform input','Search');
     * $I->seeInField('//form/*[@name=search]','Search');
     * ?>
     * ```
     *
     * @param $field
     * @param $value
     * @see Mink::seeInField()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeInField($field, $value) {
        $this->scenario->assertion('seeInField', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks that an input field or textarea doesn't contain value.
     * Field is matched either by label or CSS or Xpath
     * Example:
     *
     * ``` php
     * <?php
     * $I->dontSeeInField('Body','Type your comment here');
     * $I->dontSeeInField('form textarea[name=body]','Type your comment here');
     * $I->dontSeeInField('form input[type=hidden]','hidden_value');
     * $I->dontSeeInField('#searchform input','Search');
     * $I->dontSeeInField('//form/*[@name=search]','Search');
     * ?>
     * ```
     *
     * @param $field
     * @param $value
     * @see Mink::dontSeeInField()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeInField($field, $value) {
        $this->scenario->action('dontSeeInField', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Finds and returns text contents of element.
     * Element is searched by CSS selector, XPath or matcher by regex.
     *
     * Example:
     *
     * ``` php
     * <?php
     * $heading = $I->grabTextFrom('h1');
     * $heading = $I->grabTextFrom('descendant-or-self::h1');
     * $value = $I->grabTextFrom('~<input value=(.*?)]~sgi');
     * ?>
     * ```
     *
     * @param $cssOrXPathOrRegex
     * @return mixed
     * @see Mink::grabTextFrom()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function grabTextFrom($cssOrXPathOrRegex) {
        $this->scenario->action('grabTextFrom', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Finds and returns field and returns it's value.
     * Searches by field name, then by CSS, then by XPath
     *
     * Example:
     *
     * ``` php
     * <?php
     * $name = $I->grabValueFrom('Name');
     * $name = $I->grabValueFrom('input[name=username]');
     * $name = $I->grabValueFrom('descendant-or-self::form/descendant::input[@name = 'username']');
     * ?>
     * ```
     *
     * @param $field
     * @return mixed
     * @see Mink::grabValueFrom()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function grabValueFrom($field) {
        $this->scenario->action('grabValueFrom', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see Mink::grabAttribute()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function grabAttribute() {
        $this->scenario->action('grabAttribute', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }
}

' contains "namespace Generated\Codeception;". [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: # FAILED # [] []
[2013-06-06 21:02:40] BootstrapCest.bootstrapWithNamespace.INFO: PASSED [] []
[2013-06-06 21:02:40] OrderCest.checkOneFile.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:40] OrderCest.checkOneFile.INFO: execute command "run order LoadingOrderCept.php" [] []
[2013-06-06 21:02:40] OrderCest.checkOneFile.INFO: i expect initialization, bootstrap(b), before suite, before, bootstrap(b), test(t), after, after suite  [] []
[2013-06-06 21:02:40] OrderCest.checkOneFile.INFO: see file found "order.txt" within "tests/_log" [] []
[2013-06-06 21:02:40] OrderCest.checkOneFile.INFO: see in this file "IBS([BST])" [] []
[2013-06-06 21:02:40] OrderCest.checkOneFile.INFO: PASSED [] []
[2013-06-06 21:02:40] OrderCest.checkForFails.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:40] OrderCest.checkForFails.INFO: execute command "run order FailedCept.php --no-exit" [] []
[2013-06-06 21:02:40] OrderCest.checkForFails.INFO: see file found "order.txt" within "tests/_log" [] []
[2013-06-06 21:02:40] OrderCest.checkForFails.INFO: i expect initialization, bootstrap, before suite, before, bootstrap, test, fail, after, after suite  [] []
[2013-06-06 21:02:40] OrderCest.checkForFails.INFO: see in this file "IBS([BSTF])" [] []
[2013-06-06 21:02:40] OrderCest.checkForFails.INFO: PASSED [] []
[2013-06-06 21:02:40] OrderCest.checkTwoFiles.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:40] OrderCest.checkTwoFiles.INFO: execute command "run order --no-exit" [] []
[2013-06-06 21:02:40] OrderCest.checkTwoFiles.INFO: see file found "order.txt" within "tests/_log" [] []
[2013-06-06 21:02:40] OrderCest.checkTwoFiles.INFO: see in this file "IBSBSBS([BST][BSTF][BST])" [] []
[2013-06-06 21:02:40] OrderCest.checkTwoFiles.INFO: PASSED [] []
[2013-06-06 21:02:40] RunCest.runOneFile.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:40] RunCest.runOneFile.INFO: execute command "run tests/dummy/FileExistsCept.php" [] []
[2013-06-06 21:02:40] RunCest.runOneFile.INFO: see file found "report.html" within "tests/_log" [] []
[2013-06-06 21:02:40] RunCest.runOneFile.INFO: see in shell output "OK (" [] []
[2013-06-06 21:02:40] RunCest.runOneFile.INFO: PASSED [] []
[2013-06-06 21:02:41] RunCest.runHtml.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:41] RunCest.runHtml.INFO: execute command "run dummy --html" [] []
[2013-06-06 21:02:41] RunCest.runHtml.INFO: see file found "report.html" within "tests/_log" [] []
[2013-06-06 21:02:41] RunCest.runHtml.INFO: PASSED [] []
[2013-06-06 21:02:41] RunCest.runJsonReport.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:41] RunCest.runJsonReport.INFO: execute command "run dummy --json" [] []
[2013-06-06 21:02:41] RunCest.runJsonReport.INFO: see file found "report.json" within "tests/_log" [] []
[2013-06-06 21:02:41] RunCest.runJsonReport.INFO: see in this file ""suite":" [] []
[2013-06-06 21:02:41] RunCest.runJsonReport.INFO: see in this file ""dummy"" [] []
[2013-06-06 21:02:41] RunCest.runJsonReport.INFO: PASSED [] []
[2013-06-06 21:02:41] RunCest.runTapReport.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:41] RunCest.runTapReport.INFO: execute command "run dummy --tap" [] []
[2013-06-06 21:02:41] RunCest.runTapReport.INFO: see file found "report.tap.log" within "tests/_log" [] []
[2013-06-06 21:02:41] RunCest.runTapReport.INFO: PASSED [] []
[2013-06-06 21:02:41] RunCest.runXmlReport.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:41] RunCest.runXmlReport.INFO: execute command "run dummy --xml" [] []
[2013-06-06 21:02:41] RunCest.runXmlReport.INFO: see file found "report.xml" within "tests/_log" [] []
[2013-06-06 21:02:41] RunCest.runXmlReport.INFO: see in this file "<?xml" [] []
[2013-06-06 21:02:41] RunCest.runXmlReport.INFO: see in this file "<testsuite name="dummy"" [] []
[2013-06-06 21:02:41] RunCest.runXmlReport.INFO: see in this file "<testcase file="FileExistsCept.php"" [] []
[2013-06-06 21:02:41] RunCest.runXmlReport.INFO: PASSED [] []
[2013-06-06 21:02:41] RunCest.runReportMode.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:41] RunCest.runReportMode.INFO: execute command "run dummy --report" [] []
[2013-06-06 21:02:41] RunCest.runReportMode.INFO: see in shell output "FileExistsCept.php" [] []
[2013-06-06 21:02:41] RunCest.runReportMode.INFO: see in shell output "........Ok" [] []
[2013-06-06 21:02:41] RunCest.runReportMode.INFO: PASSED [] []
[2013-06-06 21:02:41] RunCest.runOneGroup.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:41] RunCest.runOneGroup.INFO: execute command "run skipped -g notorun" [] []
[2013-06-06 21:02:41] RunCest.runOneGroup.INFO: see in shell output "Incomplete" [] []
[2013-06-06 21:02:41] RunCest.runOneGroup.INFO: don't see in shell output "Skipped" [] []
[2013-06-06 21:02:41] RunCest.runOneGroup.INFO: PASSED [] []
[2013-06-06 21:02:41] RunCest.runTwoSuites.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:41] RunCest.runTwoSuites.INFO: execute command "run skipped,dummy --no-exit" [] []
[2013-06-06 21:02:42] RunCest.runTwoSuites.INFO: see in shell output "Suite skipped started" [] []
[2013-06-06 21:02:42] RunCest.runTwoSuites.INFO: see in shell output "Suite dummy started" [] []
[2013-06-06 21:02:42] RunCest.runTwoSuites.INFO: don't see in shell output "Suite remote started" [] []
[2013-06-06 21:02:42] RunCest.runTwoSuites.INFO: PASSED [] []
[2013-06-06 21:02:42] RunCest.skipSuites.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:02:42] RunCest.skipSuites.INFO: execute command "run --skip skipped --skip remote --skip remote_server --skip order" [] []
[2013-06-06 21:02:42] RunCest.skipSuites.INFO: see in shell output "Suite dummy started" [] []
[2013-06-06 21:02:42] RunCest.skipSuites.INFO: don't see in shell output "Suite remote started" [] []
[2013-06-06 21:02:42] RunCest.skipSuites.INFO: don't see in shell output "Suite remote_server started" [] []
[2013-06-06 21:02:42] RunCest.skipSuites.INFO: don't see in shell output "Suite order started" [] []
[2013-06-06 21:02:42] RunCest.skipSuites.INFO: PASSED [] []
[2013-06-06 21:04:42] BuildCept.php.INFO: run shell commmand "php codecept build" [] []
[2013-06-06 21:04:43] BuildCept.php.INFO: see in shell output "generated successfully" [] []
[2013-06-06 21:04:43] BuildCept.php.INFO: see file found "CodeGuy.php" within "tests/unit" [] []
[2013-06-06 21:04:43] BuildCept.php.INFO: see file found "CliGuy.php" within "tests/cli" [] []
[2013-06-06 21:04:43] BuildCept.php.INFO: see in this file "seeFileFound(" [] []
[2013-06-06 21:04:43] BuildCept.php.INFO: PASSED [] []
[2013-06-06 21:04:43] GenerateCeptCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:04:43] GenerateCeptCept.php.INFO: execute command "generate:cept dummy DummyCept" [] []
[2013-06-06 21:04:43] GenerateCeptCept.php.INFO: see file found "DummyCept.php" within "tests/dummy" [] []
[2013-06-06 21:04:43] GenerateCeptCept.php.INFO: see in this file "$I = new DumbGuy($scenario);" [] []
[2013-06-06 21:04:43] GenerateCeptCept.php.INFO: delete this file  [] []
[2013-06-06 21:04:43] GenerateCeptCept.php.INFO: i am going to create scenario in folder  [] []
[2013-06-06 21:04:43] GenerateCeptCept.php.INFO: execute command "generate:cept dummy path/DummyCept" [] []
[2013-06-06 21:04:44] GenerateCeptCept.php.INFO: see file found "DummyCept.php" within "tests/dummy/path" [] []
[2013-06-06 21:04:44] GenerateCeptCept.php.INFO: delete this file  [] []
[2013-06-06 21:04:44] GenerateCeptCept.php.INFO: i am going to create file with cept.php suffix  [] []
[2013-06-06 21:04:44] GenerateCeptCept.php.INFO: execute command "generate:cept dummy DummyCept.php" [] []
[2013-06-06 21:05:01] GenerateCeptCept.php.INFO: see file found "DummyCept.php" [] []
[2013-06-06 21:05:01] GenerateCeptCept.php.INFO: delete this file  [] []
[2013-06-06 21:05:01] GenerateCeptCept.php.INFO: i am going to create file without any suffix  [] []
[2013-06-06 21:05:01] GenerateCeptCept.php.INFO: execute command "generate:cept dummy Dummy" [] []
[2013-06-06 21:05:02] GenerateCeptCept.php.INFO: see file found "DummyCept.php" [] []
[2013-06-06 21:05:02] GenerateCeptCept.php.INFO: PASSED [] []
[2013-06-06 21:05:02] GenerateCestCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:02] GenerateCestCept.php.INFO: execute command "generate:cest dummy DummyClass" [] []
[2013-06-06 21:05:03] GenerateCestCept.php.INFO: see file found "DummyClassCest.php" [] []
[2013-06-06 21:05:03] GenerateCestCept.php.INFO: see in this file "class DummyClassCest" [] []
[2013-06-06 21:05:03] GenerateCestCept.php.INFO: PASSED [] []
[2013-06-06 21:05:03] GeneratePhpUnitCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:03] GeneratePhpUnitCept.php.INFO: execute command "generate:phpunit dummy Dummy" [] []
[2013-06-06 21:05:04] GeneratePhpUnitCept.php.INFO: see file found "DummyTest.php" [] []
[2013-06-06 21:05:04] GeneratePhpUnitCept.php.INFO: see in this file "class DummyTest extends \PHPUnit_Framework_TestCase" [] []
[2013-06-06 21:05:04] GeneratePhpUnitCept.php.INFO: see in this file "function setUp()" [] []
[2013-06-06 21:05:04] GeneratePhpUnitCept.php.INFO: PASSED [] []
[2013-06-06 21:05:04] GenerateScenariosCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:04] GenerateScenariosCept.php.INFO: execute command "generate:scenarios dummy" [] []
[2013-06-06 21:05:05] GenerateScenariosCept.php.INFO: see file found "File_Exists.txt" within "tests/_data/scenarios" [] []
[2013-06-06 21:05:05] GenerateScenariosCept.php.INFO: see in this file "I WANT TO CHECK CONFIG EXISTS" [] []
[2013-06-06 21:05:05] GenerateScenariosCept.php.INFO: see in this file "I see file found "codeception.yml"" [] []
[2013-06-06 21:05:05] GenerateScenariosCept.php.INFO: PASSED [] []
[2013-06-06 21:05:05] GenerateSuiteCept.php.INFO: as a developer who likes testing  [] []
[2013-06-06 21:05:05] GenerateSuiteCept.php.INFO: so that i have a better tests categorization  [] []
[2013-06-06 21:05:05] GenerateSuiteCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:05] GenerateSuiteCept.php.INFO: execute command "generate:suite house HouseGuy" [] []
[2013-06-06 21:05:06] GenerateSuiteCept.php.INFO: see file found "house.suite.yml" within "tests" [] []
[2013-06-06 21:05:06] GenerateSuiteCept.php.INFO: i expect guy class is generated  [] []
[2013-06-06 21:05:06] GenerateSuiteCept.php.INFO: see in this file "class_name: HouseGuy" [] []
[2013-06-06 21:05:06] GenerateSuiteCept.php.INFO: see file found "HouseHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:05:06] GenerateSuiteCept.php.INFO: see file found "_bootstrap.php" within "tests/house" [] []
[2013-06-06 21:05:06] GenerateSuiteCept.php.INFO: PASSED [] []
[2013-06-06 21:05:06] GenerateTestCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:06] GenerateTestCept.php.INFO: execute command "generate:test dummy Dummy" [] []
[2013-06-06 21:05:07] GenerateTestCept.php.INFO: see file found "DummyTest.php" [] []
[2013-06-06 21:05:07] GenerateTestCept.php.INFO: see in this file "class DummyTest extends \Codeception\TestCase\Test" [] []
[2013-06-06 21:05:07] GenerateTestCept.php.INFO: see in this file "protected $dumbGuy" [] []
[2013-06-06 21:05:07] GenerateTestCept.php.INFO: see in this file "function _before(" [] []
[2013-06-06 21:05:07] GenerateTestCept.php.INFO: PASSED [] []
[2013-06-06 21:05:07] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:07] NamespacifyCept.php.INFO: execute command "namecpacify Jazz --quiet" [] []
[2013-06-06 21:05:07] NamespacifyCept.php.ALERT: Result code was 1.

 [] []
[2013-06-06 21:05:07] NamespacifyCept.php.INFO: # FAILED # [] []
[2013-06-06 21:05:07] NamespacifyCept.php.INFO: PASSED [] []
[2013-06-06 21:05:07] RunIncompleteCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:07] RunIncompleteCept.php.INFO: execute command "run skipped IncompleteMeCept.php" [] []
[2013-06-06 21:05:07] RunIncompleteCept.php.INFO: see in shell output "(IncompleteMeCept.php)  INCOMPLETE" [] []
[2013-06-06 21:05:07] RunIncompleteCept.php.INFO: see in shell output "OK, but incomplete or skipped tests!" [] []
[2013-06-06 21:05:07] RunIncompleteCept.php.INFO: PASSED [] []
[2013-06-06 21:05:07] RunSkippedCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:07] RunSkippedCept.php.INFO: execute command "run skipped SkipMeCept.php" [] []
[2013-06-06 21:05:08] RunSkippedCept.php.INFO: see in shell output "(SkipMeCept.php)  SKIPPED" [] []
[2013-06-06 21:05:08] RunSkippedCept.php.INFO: see in shell output "OK, but incomplete or skipped tests!" [] []
[2013-06-06 21:05:08] RunSkippedCept.php.INFO: PASSED [] []
[2013-06-06 21:05:08] BootstrapCest.bootstrapProject.INFO: am in path "tests/data/sandbox/tests/_data/" [] []
[2013-06-06 21:05:08] BootstrapCest.bootstrapProject.INFO: execute command "bootstrap" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "codeception.yml" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "functional.suite.yml" within "tests" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "acceptance.suite.yml" within "tests" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "unit.suite.yml" within "tests" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "_bootstrap.php" within "tests/acceptance" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "_bootstrap.php" within "tests/functional" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "_bootstrap.php" within "tests/unit" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "WebGuy.php" within "tests/acceptance" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "TestGuy.php" within "tests/functional" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "CodeGuy.php" within "tests/unit" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "WebHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "TestHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see file found "CodeHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: see in shell output "Building Guy classes for suites" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapProject.INFO: PASSED [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapWithNamespace.INFO: am in path "tests/data/sandbox/tests/_data/" [] []
[2013-06-06 21:05:09] BootstrapCest.bootstrapWithNamespace.INFO: execute command "bootstrap --namespace Generated" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see in shell output "Building Guy classes for suites" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "codeception.yml" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see in this file "namespace: Generated" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: don't see in this file "namespace Generated\" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "functional.suite.yml" within "tests" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "acceptance.suite.yml" within "tests" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "unit.suite.yml" within "tests" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "_bootstrap.php" within "tests/acceptance" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "_bootstrap.php" within "tests/functional" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "_bootstrap.php" within "tests/unit" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "WebGuy.php" within "tests/acceptance" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "TestGuy.php" within "tests/functional" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "CodeGuy.php" within "tests/unit" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "WebHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "TestHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "CodeHelper.php" within "tests/_helpers" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "WebHelper.php" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see in this file "namespace Generated\Codeception\Module;" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see file found "WebGuy.php" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: see in this file "namespace Generated\Codeception;" [] []
[2013-06-06 21:05:10] BootstrapCest.bootstrapWithNamespace.INFO: PASSED [] []
[2013-06-06 21:05:10] OrderCest.checkOneFile.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:10] OrderCest.checkOneFile.INFO: execute command "run order LoadingOrderCept.php" [] []
[2013-06-06 21:05:10] OrderCest.checkOneFile.INFO: i expect initialization, bootstrap(b), before suite, before, bootstrap(b), test(t), after, after suite  [] []
[2013-06-06 21:05:10] OrderCest.checkOneFile.INFO: see file found "order.txt" within "tests/_log" [] []
[2013-06-06 21:05:10] OrderCest.checkOneFile.INFO: see in this file "IBS([BST])" [] []
[2013-06-06 21:05:10] OrderCest.checkOneFile.INFO: PASSED [] []
[2013-06-06 21:05:10] OrderCest.checkForFails.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:10] OrderCest.checkForFails.INFO: execute command "run order FailedCept.php --no-exit" [] []
[2013-06-06 21:05:10] OrderCest.checkForFails.INFO: see file found "order.txt" within "tests/_log" [] []
[2013-06-06 21:05:10] OrderCest.checkForFails.INFO: i expect initialization, bootstrap, before suite, before, bootstrap, test, fail, after, after suite  [] []
[2013-06-06 21:05:10] OrderCest.checkForFails.INFO: see in this file "IBS([BSTF])" [] []
[2013-06-06 21:05:10] OrderCest.checkForFails.INFO: PASSED [] []
[2013-06-06 21:05:10] OrderCest.checkTwoFiles.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:10] OrderCest.checkTwoFiles.INFO: execute command "run order --no-exit" [] []
[2013-06-06 21:05:10] OrderCest.checkTwoFiles.INFO: see file found "order.txt" within "tests/_log" [] []
[2013-06-06 21:05:10] OrderCest.checkTwoFiles.INFO: see in this file "IBSBSBS([BST][BSTF][BST])" [] []
[2013-06-06 21:05:10] OrderCest.checkTwoFiles.INFO: PASSED [] []
[2013-06-06 21:05:10] RunCest.runOneFile.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:10] RunCest.runOneFile.INFO: execute command "run tests/dummy/FileExistsCept.php" [] []
[2013-06-06 21:05:10] RunCest.runOneFile.INFO: see file found "report.html" within "tests/_log" [] []
[2013-06-06 21:05:10] RunCest.runOneFile.INFO: see in shell output "OK (" [] []
[2013-06-06 21:05:10] RunCest.runOneFile.INFO: PASSED [] []
[2013-06-06 21:05:10] RunCest.runHtml.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:10] RunCest.runHtml.INFO: execute command "run dummy --html" [] []
[2013-06-06 21:05:10] RunCest.runHtml.INFO: see file found "report.html" within "tests/_log" [] []
[2013-06-06 21:05:10] RunCest.runHtml.INFO: PASSED [] []
[2013-06-06 21:05:10] RunCest.runJsonReport.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:10] RunCest.runJsonReport.INFO: execute command "run dummy --json" [] []
[2013-06-06 21:05:10] RunCest.runJsonReport.INFO: see file found "report.json" within "tests/_log" [] []
[2013-06-06 21:05:10] RunCest.runJsonReport.INFO: see in this file ""suite":" [] []
[2013-06-06 21:05:10] RunCest.runJsonReport.INFO: see in this file ""dummy"" [] []
[2013-06-06 21:05:10] RunCest.runJsonReport.INFO: PASSED [] []
[2013-06-06 21:05:10] RunCest.runTapReport.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:10] RunCest.runTapReport.INFO: execute command "run dummy --tap" [] []
[2013-06-06 21:05:11] RunCest.runTapReport.INFO: see file found "report.tap.log" within "tests/_log" [] []
[2013-06-06 21:05:11] RunCest.runTapReport.INFO: PASSED [] []
[2013-06-06 21:05:11] RunCest.runXmlReport.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:11] RunCest.runXmlReport.INFO: execute command "run dummy --xml" [] []
[2013-06-06 21:05:11] RunCest.runXmlReport.INFO: see file found "report.xml" within "tests/_log" [] []
[2013-06-06 21:05:11] RunCest.runXmlReport.INFO: see in this file "<?xml" [] []
[2013-06-06 21:05:11] RunCest.runXmlReport.INFO: see in this file "<testsuite name="dummy"" [] []
[2013-06-06 21:05:11] RunCest.runXmlReport.INFO: see in this file "<testcase file="FileExistsCept.php"" [] []
[2013-06-06 21:05:11] RunCest.runXmlReport.INFO: PASSED [] []
[2013-06-06 21:05:11] RunCest.runReportMode.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:11] RunCest.runReportMode.INFO: execute command "run dummy --report" [] []
[2013-06-06 21:05:11] RunCest.runReportMode.INFO: see in shell output "FileExistsCept.php" [] []
[2013-06-06 21:05:11] RunCest.runReportMode.INFO: see in shell output "........Ok" [] []
[2013-06-06 21:05:11] RunCest.runReportMode.INFO: PASSED [] []
[2013-06-06 21:05:11] RunCest.runOneGroup.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:11] RunCest.runOneGroup.INFO: execute command "run skipped -g notorun" [] []
[2013-06-06 21:05:11] RunCest.runOneGroup.INFO: see in shell output "Incomplete" [] []
[2013-06-06 21:05:11] RunCest.runOneGroup.INFO: don't see in shell output "Skipped" [] []
[2013-06-06 21:05:11] RunCest.runOneGroup.INFO: PASSED [] []
[2013-06-06 21:05:11] RunCest.runTwoSuites.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:11] RunCest.runTwoSuites.INFO: execute command "run skipped,dummy --no-exit" [] []
[2013-06-06 21:05:11] RunCest.runTwoSuites.INFO: see in shell output "Suite skipped started" [] []
[2013-06-06 21:05:11] RunCest.runTwoSuites.INFO: see in shell output "Suite dummy started" [] []
[2013-06-06 21:05:11] RunCest.runTwoSuites.INFO: don't see in shell output "Suite remote started" [] []
[2013-06-06 21:05:11] RunCest.runTwoSuites.INFO: PASSED [] []
[2013-06-06 21:05:11] RunCest.skipSuites.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:05:11] RunCest.skipSuites.INFO: execute command "run --skip skipped --skip remote --skip remote_server --skip order" [] []
[2013-06-06 21:05:11] RunCest.skipSuites.INFO: see in shell output "Suite dummy started" [] []
[2013-06-06 21:05:11] RunCest.skipSuites.INFO: don't see in shell output "Suite remote started" [] []
[2013-06-06 21:05:11] RunCest.skipSuites.INFO: don't see in shell output "Suite remote_server started" [] []
[2013-06-06 21:05:11] RunCest.skipSuites.INFO: don't see in shell output "Suite order started" [] []
[2013-06-06 21:05:11] RunCest.skipSuites.INFO: PASSED [] []
[2013-06-06 21:37:39] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:37:39] NamespacifyCept.php.INFO: execute command "namespacify Jazz --quiet" [] []
[2013-06-06 21:38:12] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:38:12] NamespacifyCept.php.INFO: execute command "namespacify Jazz --force" [] []
[2013-06-06 21:38:33] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:38:33] NamespacifyCept.php.INFO: execute command "namespacify Jazz --force" [] []
[2013-06-06 21:39:00] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:39:00] NamespacifyCept.php.INFO: execute command "namespacify Jazz --force" [] []
[2013-06-06 21:45:43] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:45:43] NamespacifyCept.php.INFO: execute command "namespacify Jazz --force" [] []
[2013-06-06 21:45:44] NamespacifyCept.php.ALERT: Result code was 1.

This command adds namespaces to your Helper and Guy classes and Cepts
It will files of your tests. Use with care.
Please do not execute this command twice on a project.
+ Config file updated with namespace Jazz
+ Helpers updated with namespace Jazz\Codeception\Module)
Building Guy classes for suites: skipped, order, remote_server, dummy, remote [] []
[2013-06-06 21:45:44] NamespacifyCept.php.INFO: # FAILED # [] []
[2013-06-06 21:45:44] NamespacifyCept.php.INFO: PASSED [] []
[2013-06-06 21:46:39] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 21:46:39] NamespacifyCept.php.INFO: execute command "namespacify Jazz --force --no-exit" [] []
[2013-06-06 21:46:40] NamespacifyCept.php.ALERT: Result code was 1.

 [] []
[2013-06-06 21:46:40] NamespacifyCept.php.INFO: # FAILED # [] []
[2013-06-06 21:46:40] NamespacifyCept.php.INFO: PASSED [] []
[2013-06-06 22:14:43] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 22:14:43] NamespacifyCept.php.INFO: execute command "namespacify Jazz --force" [] []
[2013-06-06 22:14:44] NamespacifyCept.php.ALERT: Result code was 1.

This command adds namespaces to your Helper and Guy classes and Cepts
It will files of your tests. Use with care.
Please do not execute this command twice on a project.
+ Config file updated with namespace Jazz
+ Helpers updated with namespace Jazz\Codeception\Module)
Building Guy classes for suites: skipped, order, remote_server, dummy, remote [] []
[2013-06-06 22:14:44] NamespacifyCept.php.INFO: # FAILED # [] []
[2013-06-06 22:14:44] NamespacifyCept.php.INFO: PASSED [] []
[2013-06-06 22:22:29] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 22:22:29] NamespacifyCept.php.INFO: execute command "namespacify Jazz --force" [] []
[2013-06-06 22:22:30] NamespacifyCept.php.ALERT: Result code was 1.

This command adds namespaces to your Helper and Guy classes and Cepts
It will files of your tests. Use with care.
Please do not execute this command twice on a project.
+ Config file updated with namespace Jazz
+ Helpers updated with namespace Jazz\Codeception\Module)
Building Guy classes for suites: skipped, order, remote_server, dummy, remote [] []
[2013-06-06 22:22:30] NamespacifyCept.php.INFO: # FAILED # [] []
[2013-06-06 22:22:30] NamespacifyCept.php.INFO: PASSED [] []
[2013-06-06 22:26:29] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 22:26:29] NamespacifyCept.php.INFO: execute command "namespacify Jazz --force" [] []
[2013-06-06 22:26:30] NamespacifyCept.php.ALERT: Result code was 1.

This command adds namespaces to your Helper and Guy classes and Cepts
It will files of your tests. Use with care.
Please do not execute this command twice on a project.
+ Config file updated with namespace Jazz
+ Helpers updated with namespace Jazz\Codeception\Module)
Building Guy classes for suites: skipped, order, remote_server, dummy, remote [] []
[2013-06-06 22:26:30] NamespacifyCept.php.INFO: # FAILED # [] []
[2013-06-06 22:26:30] NamespacifyCept.php.INFO: PASSED [] []
[2013-06-06 22:30:57] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 22:30:57] NamespacifyCept.php.INFO: execute command "namespacify Jazz --force" [] []
[2013-06-06 22:31:00] NamespacifyCept.php.INFO: see file found "codeception.yml" [] []
[2013-06-06 22:31:00] NamespacifyCept.php.INFO: see in this file "namespace Jazz" [] []
[2013-06-06 22:31:00] NamespacifyCept.php.ALERT: text namespace Jazz in currently opened file
Failed asserting that 'namespace: Jazz
paths:
    tests: tests
    log: tests/_log
    data: tests/_data
    helpers: tests/_helpers
settings:
    bootstrap: _bootstrap.php
    suite_class: \PHPUnit_Framework_TestSuite
    colors: false
    memory_limit: 1024M
    log: true
modules:
    config:
        Db:
            dsn: ''
            user: ''
            password: ''
            dump: tests/_data/dump.sql
' contains "namespace Jazz". [] []
[2013-06-06 22:31:00] NamespacifyCept.php.INFO: # FAILED # [] []
[2013-06-06 22:31:00] NamespacifyCept.php.INFO: PASSED [] []
[2013-06-06 22:31:22] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 22:31:22] NamespacifyCept.php.INFO: execute command "namespacify Jazz --force" [] []
[2013-06-06 22:31:28] NamespacifyCept.php.INFO: see file found "codeception.yml" [] []
[2013-06-06 22:31:28] NamespacifyCept.php.INFO: see in this file "namespace: Jazz" [] []
[2013-06-06 22:31:28] NamespacifyCept.php.INFO: see file found "OrderHelper.php" [] []
[2013-06-06 22:31:28] NamespacifyCept.php.INFO: see in this file "namespace Jazz\Codeception\Module;" [] []
[2013-06-06 22:31:28] NamespacifyCept.php.INFO: see file found "FileExistsCept.php" [] []
[2013-06-06 22:31:28] NamespacifyCept.php.INFO: see in this file "namespace use Jazz\Codeception\DumbGuy;" [] []
[2013-06-06 22:31:28] NamespacifyCept.php.ALERT: text namespace use Jazz\Codeception\DumbGuy; in currently opened file
Failed asserting that '<?php use Jazz\Codeception\DumbGuy;


$I = new DumbGuy($scenario);
$I->wantTo('check config exists');
$I->seeFileFound($codeception);' contains "namespace use Jazz\Codeception\DumbGuy;". [] []
[2013-06-06 22:31:28] NamespacifyCept.php.INFO: # FAILED # [] []
[2013-06-06 22:31:28] NamespacifyCept.php.INFO: PASSED [] []
[2013-06-06 22:31:44] NamespacifyCept.php.INFO: am in path "tests/data/sandbox" [] []
[2013-06-06 22:31:44] NamespacifyCept.php.INFO: execute command "namespacify Jazz --force" [] []
[2013-06-06 22:31:45] NamespacifyCept.php.INFO: see file found "codeception.yml" [] []
[2013-06-06 22:31:45] NamespacifyCept.php.INFO: see in this file "namespace: Jazz" [] []
[2013-06-06 22:31:45] NamespacifyCept.php.INFO: see file found "OrderHelper.php" [] []
[2013-06-06 22:31:45] NamespacifyCept.php.INFO: see in this file "namespace Jazz\Codeception\Module;" [] []
[2013-06-06 22:31:45] NamespacifyCept.php.INFO: see file found "FileExistsCept.php" [] []
[2013-06-06 22:31:45] NamespacifyCept.php.INFO: see in this file "use Jazz\Codeception\DumbGuy;" [] []
[2013-06-06 22:31:45] NamespacifyCept.php.INFO: PASSED [] []
