[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:31] Codeception.ALERT: The "namespace" argument does not exist. [] []
[2013-06-06 18:37:31] Codeception.INFO: # ERROR # [] []
[2013-06-06 18:37:31] Codeception.INFO: PASSED [] []
[2013-06-06 18:37:41] Codeception.ALERT: The "namespace" argument does not exist. [] []
[2013-06-06 18:37:41] Codeception.INFO: # ERROR # [] []
[2013-06-06 18:37:41] Codeception.INFO: PASSED [] []
[2013-06-06 18:38:45] Codeception.ALERT: Class \Codeception\Command\Namespecify does not exist [] []
[2013-06-06 18:38:45] Codeception.INFO: # ERROR # [] []
[2013-06-06 18:38:45] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:43] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:43] Codeception.ALERT: Failed asserting that '<?php
// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile

namespace Codeception\Shire;
use \Codeception\Maybe;
use Codeception\Module\Filesystem;
use Codeception\Module\EmulateModuleHelper;

/**
 * Inherited methods
 * @method void wantToTest($text)
 * @method void wantTo($text)
 * @method void expectTo($prediction)
 * @method void expect($prediction)
 * @method void amGoingTo($argumentation)
 * @method void am($role)
 * @method void lookForwardTo($role)
*/

class HobbitGuy extends \Codeception\AbstractGuy
{
    
    /**
     * Enters a directory In local filesystem.
     * Project root directory is used by default
     *
     * @param $path
     * @see Filesystem::amInPath()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function amInPath($path) {
        $this->scenario->condition('amInPath', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Opens a file and stores it's content.
     *
     * Usage:
     *
     * ``` php
     * <?php
     * $I->openFile('composer.json');
     * $I->seeInThisFile('codeception/codeception');
     * ?>
     * ```
     *
     * @param $filename
     * @see Filesystem::openFile()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function openFile($filename) {
        $this->scenario->action('openFile', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Deletes a file
     *
     * ``` php
     * <?php
     * $I->deleteFile('composer.lock');
     * ?>
     * ```
     *
     * @param $filename
     * @see Filesystem::deleteFile()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function deleteFile($filename) {
        $this->scenario->action('deleteFile', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Deletes directory with all subdirectories
     *
     * ``` php
     * <?php
     * $I->deleteDir('vendor');
     * ?>
     * ```
     *
     * @param $dirname
     * @see Filesystem::deleteDir()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function deleteDir($dirname) {
        $this->scenario->action('deleteDir', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Copies directory with all contents
     *
     * ``` php
     * <?php
     * $I->copyDir('vendor','old_vendor');
     * ?>
     * ```
     *
     * @param $src
     * @param $dst
     * @see Filesystem::copyDir()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function copyDir($src, $dst) {
        $this->scenario->action('copyDir', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks If opened file has `text` in it.
     *
     * Usage:
     *
     * ``` php
     * <?php
     * $I->openFile('composer.json');
     * $I->seeInThisFile('codeception/codeception');
     * ?>
     * ```
     *
     * @param $text
     * @see Filesystem::seeInThisFile()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeInThisFile($text) {
        $this->scenario->assertion('seeInThisFile', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks If opened file doesn't contain `text` in it
     *
     * ``` php
     * <?php
     * $I->openFile('composer.json');
     * $I->seeInThisFile('codeception/codeception');
     * ?>
     * ```
     *
     * @param $text
     * @see Filesystem::dontSeeInThisFile()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function dontSeeInThisFile($text) {
        $this->scenario->action('dontSeeInThisFile', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Deletes a file
     * @see Filesystem::deleteThisFile()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function deleteThisFile() {
        $this->scenario->action('deleteThisFile', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     * Checks if file exists in path.
     * Opens a file when it's exists
     *
     * ``` php
     * <?php
     * $I->seeFileFound('UserModel.php','app/models');
     * ?>
     * ```
     *
     * @param $filename
     * @param string $path
     * @see Filesystem::seeFileFound()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeFileFound($filename, $path = null) {
        $this->scenario->assertion('seeFileFound', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see EmulateModuleHelper::seeEquals()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeEquals($expected, $actual) {
        $this->scenario->assertion('seeEquals', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
    /**
     *
     * @see EmulateModuleHelper::seeFeaturesEquals()
     * @return \Codeception\Maybe
     * ! This method is generated. DO NOT EDIT. !
     * ! Documentation taken from corresponding module !
     */
    public function seeFeaturesEquals($expected) {
        $this->scenario->assertion('seeFeaturesEquals', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }
}

' contains "namespace Shire\Codeception;". [] []
[2013-06-06 19:38:43] Codeception.INFO: # FAILED # [] []
[2013-06-06 19:38:43] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:43] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:43] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:43] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:38:44] Codeception.INFO: PASSED [] []
[2013-06-06 19:39:30] Codeception.ALERT: Command "build" is not defined. [] []
[2013-06-06 19:39:30] Codeception.INFO: # ERROR # [] []
[2013-06-06 19:39:30] Codeception.INFO: PASSED [] []
[2013-06-06 19:39:34] Codeception.ALERT: Command "build" is not defined. [] []
[2013-06-06 19:39:34] Codeception.INFO: # ERROR # [] []
[2013-06-06 19:39:34] Codeception.INFO: PASSED [] []
[2013-06-06 19:40:52] Codeception.ALERT: Failed asserting that 'This command adds namespaces to your Helper and Guy classes
Warning: this will update your Helper classes and Cepts
Please do not execute this command twice on a project.
+ Config file updated with namespace MiddleEarth
+ Helpers updated with namespace MiddleEarth\Codeception\Module)
+ Guy classes rebuilt
+ Cept tests updated (total 13 files changed)

Namespace MiddleEarth injected to current tests
' contains "Do you want to proceed?". [] []
[2013-06-06 19:40:52] Codeception.INFO: # FAILED # [] []
[2013-06-06 19:40:52] Codeception.INFO: PASSED [] []
[2013-06-06 20:05:52] Codeception.INFO: PASSED [] []
[2013-06-06 20:15:34] Codeception.ALERT: Failed asserting that two strings are equal. [] []
[2013-06-06 20:15:34] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:15:34] Codeception.INFO: PASSED [] []
[2013-06-06 20:15:59] Codeception.INFO: PASSED [] []
[2013-06-06 20:18:07] Codeception.ALERT: Failed asserting that '<?php
namespace Codeception\Module;

// here you can define custom functions for CodeGuy 

class CodeHelper extends \Codeception\Module
{

}
' contains "namespace MiddleEarth\Codeception\Module". [] []
[2013-06-06 20:18:07] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:18:07] Codeception.INFO: PASSED [] []
[2013-06-06 20:18:55] Codeception.ALERT: Failed asserting that '<?php
namespace Codeception\Module;

// here you can define custom functions for CodeGuy 

class CodeHelper extends \Codeception\Module
{

}
' contains "namespace MiddleEarth\Codeception\Module". [] []
[2013-06-06 20:18:55] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:18:55] Codeception.INFO: PASSED [] []
[2013-06-06 20:19:07] Codeception.ALERT: Failed asserting that '<?php
namespace Codeception\Module;

// here you can define custom functions for CodeGuy 

class CodeHelper extends \Codeception\Module
{

}
' contains "namespace MiddleEarth\Codeception\Module". [] []
[2013-06-06 20:19:07] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:19:07] Codeception.INFO: PASSED [] []
[2013-06-06 20:44:05] Codeception.ALERT: Failed asserting that '<?php
namespace Codeception\Module;

// here you can define custom functions for CodeGuy 

class CodeHelper extends \Codeception\Module
{

}
' contains "namespace MiddleEarth\Codeception\Module". [] []
[2013-06-06 20:44:05] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:44:05] Codeception.INFO: PASSED [] []
[2013-06-06 20:44:19] Codeception.ALERT: Failed asserting that '<?php
namespace Codeception\Module;

// here you can define custom functions for CodeGuy 

class CodeHelper extends \Codeception\Module
{

}
' contains "namespace MiddleEarth\Codeception\Module". [] []
[2013-06-06 20:44:19] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:44:19] Codeception.INFO: PASSED [] []
[2013-06-06 20:44:48] Codeception.INFO: PASSED [] []
[2013-06-06 20:45:04] Codeception.INFO: PASSED [] []
[2013-06-06 20:45:08] Codeception.ALERT: Failed asserting that '<?php
namespace Codeception\Module;

// here you can define custom functions for CodeGuy 

class CodeHelper extends \Codeception\Module
{

}
' contains "namespace MiddleEarth\Codeception\Module". [] []
[2013-06-06 20:45:08] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:45:08] Codeception.INFO: PASSED [] []
[2013-06-06 20:45:20] Codeception.ALERT: Failed asserting that '<?php
namespace Codeception\Module;

// here you can define custom functions for CodeGuy 

class CodeHelper extends \Codeception\Module
{

}
' contains "namespace MiddleEarth\Codeception\Module". [] []
[2013-06-06 20:45:20] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:45:20] Codeception.INFO: PASSED [] []
[2013-06-06 20:45:27] Codeception.ALERT: Failed asserting that '<?php
namespace Codeception\Module;

// here you can define custom functions for CodeGuy 

class CodeHelper extends \Codeception\Module
{

}
' contains "namespace MiddleEarth\Codeception\Module". [] []
[2013-06-06 20:45:27] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:45:27] Codeception.INFO: PASSED [] []
[2013-06-06 20:45:31] Codeception.INFO: PASSED [] []
[2013-06-06 20:45:34] Codeception.ALERT: preg_replace(): No ending delimiter '~' found [] []
[2013-06-06 20:45:34] Codeception.INFO: # ERROR # [] []
[2013-06-06 20:45:34] Codeception.INFO: PASSED [] []
[2013-06-06 20:45:38] Codeception.ALERT: preg_replace(): No ending delimiter '~' found [] []
[2013-06-06 20:45:38] Codeception.INFO: # ERROR # [] []
[2013-06-06 20:45:38] Codeception.INFO: PASSED [] []
[2013-06-06 20:45:47] Codeception.ALERT: Failed asserting that '<?php
namespace Codeception\Module;

// here you can define custom functions for CodeGuy 

class CodeHelper extends \Codeception\Module
{

}
' contains "namespace MiddleEarth\Codeception\Module". [] []
[2013-06-06 20:45:47] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:45:47] Codeception.INFO: PASSED [] []
[2013-06-06 20:45:51] Codeception.ALERT: Failed asserting that '<?php
namespace Codeception\Module;

// here you can define custom functions for CodeGuy 

class CodeHelper extends \Codeception\Module
{

}
' contains "namespace MiddleEarth\Codeception\Module". [] []
[2013-06-06 20:45:51] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:45:51] Codeception.INFO: PASSED [] []
[2013-06-06 20:48:01] Codeception.ALERT: Failed asserting that '<?php
namespace Codeception\Module;

// here you can define custom functions for CodeGuy 

class CodeHelper extends \Codeception\Module
{

}
' contains "namespace MiddleEarth\Codeception\Module". [] []
[2013-06-06 20:48:01] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:48:01] Codeception.INFO: PASSED [] []
[2013-06-06 20:48:06] Codeception.INFO: PASSED [] []
[2013-06-06 20:48:13] Codeception.INFO: PASSED [] []
[2013-06-06 20:48:19] Codeception.INFO: PASSED [] []
[2013-06-06 20:48:23] Codeception.ALERT: Failed asserting that '<?php
namespace Codeception\Module;

// here you can define custom functions for CodeGuy 

class CodeHelper extends \Codeception\Module
{

}
' contains "namespace MiddleEarth\Codeception\Module". [] []
[2013-06-06 20:48:23] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:48:23] Codeception.INFO: PASSED [] []
[2013-06-06 20:50:09] Codeception.ALERT: Failed asserting that '<?php
namespace MiddleEarth\Codeception\Module

// here you can define custom functions for CliGuy 

class CliHelper extends \Codeception\Module
{
    public function _before(\Codeception\TestCase $test) {
        $this->getModule('Filesystem')->copyDir(\Codeception\Configuration::dataDir().'claypit', \Codeception\Configuration::dataDir().'sandbox');
    }

    public function _after(\Codeception\TestCase $test) {
        $this->getModule('Filesystem')->deleteDir(\Codeception\Configuration::dataDir().'sandbox');
        chdir(\Codeception\Configuration::projectDir());
    }

    public function executeCommand($command) {
        $this->getModule('Cli')->runShellCommmand('php '.\Codeception\Configuration::projectDir().'codecept '.$command);
    }
}
' contains "use MiddleEarth\Codeception\WebGuy". [] []
[2013-06-06 20:50:09] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:50:09] Codeception.INFO: PASSED [] []
[2013-06-06 20:50:23] Codeception.ALERT: Failed asserting that '<?php
namespace MiddleEarth\Codeception\Module

class PhpSiteHelper extends \Codeception\Util\Framework
{
    public function __construct() {
        $this->client = new \Codeception\Util\Connector\Universal();
        $this->client->setIndex(\Codeception\Configuration::dataDir().'/app/index.php');
    }
}
' contains "use MiddleEarth\Codeception\WebGuy". [] []
[2013-06-06 20:50:23] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:50:23] Codeception.INFO: PASSED [] []
[2013-06-06 20:50:30] Codeception.ALERT: Failed asserting that '<?php
namespace MiddleEarth\Codeception\Module

// here you can define custom functions for TestGuy 

class TestHelper extends \Codeception\Module
{

}
' contains "use MiddleEarth\Codeception\WebGuy". [] []
[2013-06-06 20:50:30] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:50:30] Codeception.INFO: PASSED [] []
[2013-06-06 20:50:37] Codeception.ALERT: Failed asserting that 'use MiddleEarth\CliGuy;

<?php
$I = new CliGuy($scenario);
$I->am('developer who likes testing');
$I->wantTo('generate sample Suite');
$I->lookForwardTo('have a better tests categorization');

$I->amInPath('tests/data/sandbox');
$I->executeCommand('generate:suite house HouseGuy');
$I->seeFileFound('house.suite.yml', 'tests');
$I->expect('guy class is generated');
$I->seeInThisFile('class_name: HouseGuy');
$I->seeFileFound('HouseHelper.php', 'tests/_helpers');
$I->seeFileFound('_bootstrap.php','tests/house');
' contains "use MiddleEarth\Codeception\WebGuy". [] []
[2013-06-06 20:50:37] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:50:37] Codeception.INFO: PASSED [] []
[2013-06-06 20:51:50] Codeception.ALERT: Failed asserting that 'use MiddleEarth\Codeception\CliGuy;

<?php
$I = new CliGuy($scenario);
$I->am('developer who likes testing');
$I->wantTo('generate sample Suite');
$I->lookForwardTo('have a better tests categorization');

$I->amInPath('tests/data/sandbox');
$I->executeCommand('generate:suite house HouseGuy');
$I->seeFileFound('house.suite.yml', 'tests');
$I->expect('guy class is generated');
$I->seeInThisFile('class_name: HouseGuy');
$I->seeFileFound('HouseHelper.php', 'tests/_helpers');
$I->seeFileFound('_bootstrap.php','tests/house');
' contains "use MiddleEarth\Codeception\WebGuy". [] []
[2013-06-06 20:51:50] Codeception.INFO: # FAILED # [] []
[2013-06-06 20:51:50] Codeception.INFO: PASSED [] []
[2013-06-06 20:52:04] Codeception.INFO: PASSED [] []
[2013-06-06 20:53:14] Codeception.INFO: PASSED [] []
[2013-06-06 20:53:24] Codeception.INFO: PASSED [] []
