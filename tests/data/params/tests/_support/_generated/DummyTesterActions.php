<?php  //[STAMP] de001be784c4c4709f7fd812913d5d45
namespace _generated;

// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile

use Helper\Dummy;

trait DummyTesterActions
{
    /**
     * @return \Codeception\Scenario
     */
    abstract protected function getScenario();

    
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Helper\Dummy::seePathIsSet()
     */
    public function canSeePathIsSet() {
        return $this->getScenario()->runStep(new \Codeception\Step\ConditionalAssertion('seePathIsSet', func_get_args()));
    }
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Helper\Dummy::seePathIsSet()
     */
    public function seePathIsSet() {
        return $this->getScenario()->runStep(new \Codeception\Step\Assertion('seePathIsSet', func_get_args()));
    }

 
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Helper\Dummy::seeVarsAreSet()
     */
    public function canSeeVarsAreSet() {
        return $this->getScenario()->runStep(new \Codeception\Step\ConditionalAssertion('seeVarsAreSet', func_get_args()));
    }
    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Helper\Dummy::seeVarsAreSet()
     */
    public function seeVarsAreSet() {
        return $this->getScenario()->runStep(new \Codeception\Step\Assertion('seeVarsAreSet', func_get_args()));
    }
}
