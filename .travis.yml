sudo: false

language: php

php:
  - 5.6
  - 7.0
#  - 7.1
#  - 7.2
env:
#  - FRAMEWORK=CodeCeption
  - FRAMEWORK=Yii2 TEST_REPO="https://github.com/Codeception/yii2-tests" PECL= SUITES=
#  - FRAMEWORK=Symfony VERSION=2.8 TEST_REPO='-b 2.1 https://github.com/Codeception/symfony-demo.git' SUITES=
#  - FRAMEWORK=Symfony VERSION=3.4 TEST_REPO='--recurse-submodules https://github.com/Naktibalda/codeception-symfony-tests'
#  - FRAMEWORK=Symfony VERSION=4.0 TEST_REPO='https://github.com/Codeception/symfony-demo.git'
#  - FRAMEWORK=Symfony VERSION=4.1 TEST_REPO='https://github.com/Codeception/symfony-demo.git'
  - FRAMEWORK=Lumen TEST_REPO='-b codeception-2.2 https://github.com/codeception/codeception-lumen-sample.git' SUITES=
  - FRAMEWORK=Laravel TEST_REPO='-b codeception-2.3 https://github.com/codeception/codeception-laravel5-sample.git' SUITES=
  - FRAMEWORK=Phalcon TEST_REPO=https://github.com/Codeception/phalcon-demo.git SUITES=
  - FRAMEWORK=Zend1 TEST_REPO='-b 2.2 --recurse-submodules https://github.com/Naktibalda/codeception-zf1-tests' SUITES=
  - FRAMEWORK=Zend2 TEST_REPO='-b 2.2 --recurse-submodules https://github.com/Naktibalda/codeception-zf2-tests' SUITES=
  - FRAMEWORK=ZendExpressive TEST_REPO='-b 2.2 --recurse-submodules https://github.com/Naktibalda/codeception-zend-expressive-tests' SUITES=functional
addons:
  postgresql: "9.2"

branches:
  except:
    - gh-pages

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

services:
  - mongodb
  - rabbitmq
  - postgresql
  - redis

before_install:
  - export INI=~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  - echo memory_limit = -1 >> $INI
install:
  - '[[ -z "$CI_USER_TOKEN" ]] || composer config github-oauth.github.com ${CI_USER_TOKEN};'
  # Add extensions
  - '[[ -z "$PECL" ]] || (yes "" | pecl install $PECL)'
  # Clone test repository
  - git clone -q --depth=1 $TEST_REPO framework-tests
  - git --git-dir framework-tests/.git log -n 1
  - composer install
  - composer update -d framework-tests $composer_parameters --no-dev --prefer-dist --prefer-lowest
#  - 'composer require mongodb/mongodb --no-update'
#  - '[[ "$TRAVIS_PHP_VERSION" == "7.2" ]] || composer global require "fxp/composer-asset-plugin:~1.3.1"'
#  - '[[ "$FRAMEWORK" != "Symfony" ]] || composer require symfony/finder=~$SYMFONY --no-update --ignore-platform-reqs'
#  - '[[ "$FRAMEWORK" != "Symfony" ]] || composer require symfony/yaml=~$SYMFONY --no-update --ignore-platform-reqs'
#  - '[[ "$FRAMEWORK" != "Symfony" ]] || composer require symfony/console=~$SYMFONY --no-update --ignore-platform-reqs'
#  - '[[ "$FRAMEWORK" != "Symfony" ]] || composer require symfony/event-dispatcher=~$SYMFONY --no-update --ignore-platform-reqs'
#  - '[[ "$FRAMEWORK" != "Symfony" ]] || composer require symfony/css-selector=~$SYMFONY --no-update --ignore-platform-reqs'
#  - '[[ "$FRAMEWORK" != "Symfony" ]] || composer require symfony/dom-crawler=~$SYMFONY --no-update --ignore-platform-reqs'
#  - '[[ "$FRAMEWORK" != "Symfony" ]] || composer require symfony/browser-kit=~$SYMFONY --no-update --ignore-platform-reqs'
#  - '[[ "$FRAMEWORK" != "Symfony" ]] || composer require symfony/browser-kit=~$SYMFONY --no-update --ignore-platform-reqs'
   Phalcon
  - '[[ "$FRAMEWORK" != "Phalcon" ]] || git clone -q --depth=1 https://github.com/phalcon/cphalcon.git'
  - '[[ "$FRAMEWORK" != "Phalcon" ]] || (cd cphalcon/build; bash ./install --phpize $(phpenv which phpize) --php-config $(phpenv which php-config) &>/dev/null && phpenv config-add ../tests/_ci/phalcon.ini &> /dev/null)'
  # Symfony
  #- '[[ "$SF_VERSION" != "4" ]] || (git clone -q --depth=1 -b master https://github.com/Codeception/symfony-demo.git frameworks-symfony && echo "Cloned Symfony 4 site")'
  #- '[[ "$SF_VERSION" == "4" ]] || composer require -d frameworks-symfony symfony/symfony=~$SYMFONY --no-update'
before_script:
  - '[[ "$TRAVIS_PHP_VERSION" == 7.* ]] || echo "extension = mongo.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini'
  # preparing databases
#  - '[[ "$FRAMEWORK" != "CodeCeption" ]] || mysql -e "create database codeception_test;"'
#  - '[[ "$FRAMEWORK" != "CodeCeption" ]] || psql -c "create database codeception_test;" -U postgres'
#  - '[[ "$FRAMEWORK" != "Symfony" ]] || mysql -e "create database symfony_test;"'
  # starting demo servers
#  - php -S 127.0.0.1:8000 -t tests/data/app >/dev/null 2>&1 &
#  - php -S 127.0.0.1:8010 -t tests/data >/dev/null 2>&1 &
  # Phalcon
#  - '[[ "$FRAMEWORK" != "Phalcon" ]] || mysql -e "CREATE DATABASE phalcon_demo CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;"'
#  - '[[ "$FRAMEWORK" != "Phalcon" ]] || cat frameworks-phalcon/schemas/phalcon_demo.sql | mysql phalcon_demo'
  # Laravel 5
  - '[[ "$FRAMEWORK" != "Laravel" ]] || touch framework-tests/storage/testing.sqlite'
  - '[[ "$FRAMEWORK" != "Laravel" ]] || php framework-tests/artisan migrate --env=testing --database=sqlite_testing --force'
  # Lumen
  - '[[ "$FRAMEWORK" != "Lumen" ]] || cp framework-tests/.env.testing framework-tests/.env'
  - '[[ "$FRAMEWORK" != "Lumen" ]] || touch framework-tests/storage/testing.sqlite'
  - '[[ "$FRAMEWORK" != "Lumen" ]] || php framework-tests/artisan migrate --database=testing --force'
  # Symfony
#  - '[[ "$VERSION" != "2" ]] || php framework-tests/app/console doctrine:schema:create -n --env test'
#  - '[[ "$VERSION" != "2" ]] || php framework-tests/app/console doctrine:fixtures:load -n --env test'
#  - '[[ "$VERSION" != "3" ]] || php framework-tests/bin/console doctrine:schema:update --force -n'
  # ZF2
  - '[[ "$FRAMEWORK" != "Zend2" ]] || mysql -e "create database zf2_test;"'
  - '[[ "$FRAMEWORK" != "Zend2" ]] || php framework-tests/vendor/bin/doctrine-module orm:schema-tool:create'
  # Build
#  - '[[ "$VERSION" != "2" ]] || php codecept build -c framework-tests/src/AppBundle'
  - '[[ -f "framework-tests/codeception.yml" || -f "framework-tests/codeception.dist.yml" ]] && php codecept build -c framework-tests'
script:
#  - '[[ $FRAMEWORK -q "CodeCeption" ]] || php codecept run cli,unit'
#  - '[[ "$TRAVIS_PHP_VERSION" == "7.0" ]] || php codecept run coverage'  # run coverage tests on php only
#  - '[[ "$VERSION" != "2" ]] || php codecept run functional -c frameworks-symfony/src/AppBundle' # Symfony 2 Tests
#  - '[[ "$VERSION" != "3" ]] || php codecept run -c framework-tests' # Symfony 3 Tests
#  - '[[ "$VERSION" != "4" ]] || php codecept run -c framework-tests functional,unit' # Symfony 4 Tests
  - '[[ -f "framework-tests/codeception.yml" || -f "framework-tests/codeception.dist.yml" ]] && php codecept run -c framework-tests --debug $SUITES'